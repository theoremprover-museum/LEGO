Module lib_nat_sqrt Import "lib_nat_iter" "lib_nat_rels";
[square : {n:nat}nat
  = [n:nat]times n n];
[sqrt : {n:nat}nat
  = [n:nat]nat_iter%%nat zero ([a:nat]if%%nat (le (square (suc a)) n) (suc a) a) n];
[sqrt_cor : {n:nat}(Le (square (sqrt n)) n /\ Lt n (square (suc (sqrt n))))
  = [n:nat]pair%%(Le (square (sqrt n)) n)%%(Lt n (square (suc (sqrt n)))) (le_true_imp_Le (square (sqrt n)) n (while_cond1 ([a:nat]le (square a) n) (Le_imp_le_true (square zero) n (Le_zero_n n)) n)) (while_cond2 ([a:nat]le (square a) n) n%%(Lt n (square (suc (sqrt n)))) ([H:Eq%%nat (nat_iter%%nat zero ([a:nat]if%%nat (le (square (suc a)) n) (suc a) a) n) n]Eq_subst%%nat%%n%%(nat_iter%%nat zero ([a:nat]if%%nat (le (square (suc a)) n) (suc a) a) n) (Eq_sym%%nat%%(nat_iter%%nat zero ([a:nat]if%%nat (le (square (suc a)) n) (suc a) a) n)%%n H) ([z:nat]Lt n (square (suc z))) (Le_imp_Lt_suc' n (square (suc n)) (Le_trans%%(suc n)%%(times (suc n) one)%%(times (suc n) (suc n)) (eq_imp_Le (suc n) (times (suc n) one) (Eq_trans%%nat%%(suc n)%%(times one (suc n))%%(times (suc n) one) (times_one|(suc n)) (times_commutes|one|(suc n)))) (Le_resp_times one (suc n) (suc n) (Le_resp_suc zero n (Le_zero_n n)))))) (le_false_imp_Lt (square (suc (nat_iter%%nat zero ([a:nat]if%%nat (le (square (suc a)) n) (suc a) a) n))) n))];
[sqrt_small : {n:nat}(Lt one n)->Lt (sqrt n) n
  = [n:nat][H:Lt one n]decide_nat n (sqrt n)%%(Lt (sqrt n) n) ([H1:Le n (sqrt n)]not_refl_Lt n (Lt_Le_trans%%n%%(square (sqrt n))%%n (Lt_Le_trans%%n%%(times n n)%%(times (sqrt n) (sqrt n)) (ze_Lt_imp_Eq_suc n (Le_imp_Lt_suc' zero n (Lt_imp_Le one n H)) (Lt n (times n n)) ([t:nat][H2:Eq%%nat n (suc t)]Eq_subst%%nat%%(suc t)%%n (Eq_sym%%nat%%n%%(suc t) H2) ([z:nat]Lt z (times z z)) (Le_Lt_trans%%(suc t)%%(times (suc t) one)%%(times (suc t) (suc t)) (eq_imp_Le (suc t) (times (suc t) one) (Eq_trans%%nat%%(suc t)%%(times one (suc t))%%(times (suc t) one) (times_one|(suc t)) (times_commutes|one|(suc t)))) (Lt_resp_times one (suc t) t (Eq_subst%%nat%%n%%(suc t) H2 (Lt one) H))))) (Le_resp_times_both n (sqrt n) n (sqrt n) H1 H1)) (fst%%(Le (square (sqrt n)) n)%%(Lt n (square (suc (sqrt n)))) (sqrt_cor n))) (Lt (sqrt n) n)) (PropId%%(Lt (sqrt n) n))];
