Module lib_list_Distin Import "lib_list_Member" "lib_nat_Le";
$[Distin : {s|SET}(list s)->Prop//Dis1 Dis2];
$[Dis1 : {s|SET}Distin%%s (nil s)];
$[Dis2 : {s|SET}{a:s}{xs:list s}(not (Member%%s a xs))->(Distin%%s xs)->Distin%%s (cons%%s a xs)];
$[Distin_elim : {s|SET}{C_Distin:{x1:list s}Prop}(C_Distin (nil s))->({a:s}{xs:list s}{x1:not (Member%%s a xs)}{x2:Distin%%s xs}{x2_ih:C_Distin xs}C_Distin (cons%%s a xs))->{x1|list s}{z:Distin%%s x1}C_Distin x1];
Label (!Distin!) Distin;Label (!Distin elim!) Distin_elim;Label (!Distin Dis1!) Dis1;Label (!Distin Dis2!) Dis2;[[s|SET][C_Distin:(list s)->Prop][f_Dis1:C_Distin (nil s)][f_Dis2:{a:s}{xs:list s}(not (Member a xs))->(Distin xs)->(C_Distin xs)->C_Distin (cons a xs)][a:s][xs:list s][x1:not (Member a xs)][x2:Distin xs]   Distin_elim C_Distin f_Dis1 f_Dis2 (Dis1|s)  ==>  f_Dis1|| Distin_elim C_Distin f_Dis1 f_Dis2 (Dis2 a xs x1 x2)  ==>  f_Dis2 a xs x1 x2 (Distin_elim C_Distin f_Dis1 f_Dis2 x2)]
;
[Distin_inv : {s|SET}{a|s}{l|list s}(Distin%%s (cons%%s a l))->(not (Member%%s a l) /\ Distin%%s l)
  = [s|SET][a|s][l|list s]Distin_elim%%s ([l'4:list s](not (Member%%s (hd%%s a l'4) (tail%%s l'4)) /\ Distin%%s (tail%%s l'4))) (pair%%(not (Member%%s (hd%%s a (nil s)) (tail%%s (nil s))))%%(Distin%%s (tail%%s (nil s))) (not_Member_nil%%s%%(hd%%s a (nil s))) (Dis1%%s)) ([a1:s][xs:list s][x1:not (Member%%s a1 xs)][x2:Distin%%s xs][x2_ih:not (Member%%s (hd%%s a xs) (tail%%s xs)) /\ Distin%%s (tail%%s xs)]pair%%(not (Member%%s (hd%%s a (cons%%s a1 xs)) (tail%%s (cons%%s a1 xs))))%%(Distin%%s (tail%%s (cons%%s a1 xs))) x1 x2)%%(cons%%s a l)];
[Distin_append : {s|SET}{l1,l2:list s}(Distin%%s l1)->(Distin%%s l2)->({a:s}(Member%%s a l1)->not (Member%%s a l2))->Distin%%s (append%%s l1 l2)
  = [s|SET]([Phi:{l1|list s}{z:Distin%%s l1}{l2:list s}(Distin%%s l2)->({a:s}(Member%%s a l1)->not (Member%%s a l2))->Distin%%s (append%%s l1 l2)][l1,l2:list s][R1:Distin%%s l1]Phi%%l1 R1 l2) (Distin_elim%%s ([l1:list s]{l2:list s}(Distin%%s l2)->({a:s}(Member%%s a l1)->not (Member%%s a l2))->Distin%%s (append%%s l1 l2)) (Distin_elim%%s ([l2:list s]({a:s}(Member%%s a (nil s))->not (Member%%s a l2))->Distin%%s (append%%s (nil s) l2)) ([H:{a:s}(Member%%s a (nil s))->not (Member%%s a (nil s))]Dis1%%s) ([a:s][xs:list s][x1:not (Member%%s a xs)][x2:Distin%%s xs][x2_ih:({a'6:s}(Member%%s a'6 (nil s))->not (Member%%s a'6 xs))->Distin%%s (append%%s (nil s) xs)][H:{a'7:s}(Member%%s a'7 (nil s))->not (Member%%s a'7 (cons%%s a xs))]Dis2%%s a xs x1 x2)) ([a:s][xs:list s][x1:not (Member%%s a xs)][x2:Distin%%s xs][x2_ih:{l2:list s}(Distin%%s l2)->({a'8:s}(Member%%s a'8 xs)->not (Member%%s a'8 l2))->Distin%%s (append%%s xs l2)][l2:list s][H:Distin%%s l2][H1:{a'9:s}(Member%%s a'9 (cons%%s a xs))->not (Member%%s a'9 l2)]Dis2%%s a (list_elim%%s ([_:list s]list s) l2 ([y:s][_:list s]cons|s y) xs) ([H2:Member%%s a (list_elim%%s ([_:list s]list s) l2 ([y:s][_:list s]cons|s y) xs)]fst%%((Member%%s a (append%%s xs l2))->(Member%%s a xs \/ Member%%s a l2))%%((Member%%s a xs \/ Member%%s a l2)->Member%%s a (append%%s xs l2)) (Member_append%%s xs l2 a) H2%%absurd x1 (H1 a (snd%%((Member%%s a (cons%%s a xs))->(Member%%s a xs \/ Eq%%s a a))%%((Member%%s a xs \/ Eq%%s a a)->Member%%s a (cons%%s a xs)) (Mem_ind|s|xs|a|a) (inr%%(Member%%s a xs)%%(Eq|s a a) (Eq_refl%%s a))))) (x2_ih l2 H ([el:s][H2:Member%%s el xs][H3:Member%%s el l2]H1 el (snd%%((Member%%s el (cons%%s a xs))->(Member%%s el xs \/ Eq%%s a el))%%((Member%%s el xs \/ Eq%%s a el)->Member%%s el (cons%%s a xs)) (Mem_ind|s|xs|a|el) (inl%%(Member%%s el xs)%%(Eq%%s a el) H2)) H3))))];
[Distin_inj_map : {s,u|SET}{l:list s}{f:s->u}({a1,a2:s}(Member%%s a1 l)->(Member%%s a2 l)->(Eq%%u (f a1) (f a2))->Eq%%s a1 a2)->(Distin%%s l)->Distin%%u (map%%s%%u f l)
  = [s,u|SET]([Phi:{l|list s}{z:Distin%%s l}{f:s->u}{x3:{a1,a2:s}(Member%%s a1 l)->(Member%%s a2 l)->(Eq%%u (f a1) (f a2))->Eq%%s a1 a2}Distin%%u (map%%s%%u f l)][l:list s][f:s->u][x3:{a1,a2:s}(Member%%s a1 l)->(Member%%s a2 l)->(Eq%%u (f a1) (f a2))->Eq%%s a1 a2][R1:Distin%%s l]Phi%%l R1 f x3) (Distin_elim%%s ([l:list s]{f:s->u}{x3:{a1,a2:s}(Member%%s a1 l)->(Member%%s a2 l)->(Eq%%u (f a1) (f a2))->Eq%%s a1 a2}Distin%%u (map%%s%%u f l)) ([f:s->u][x3:{a1,a2:s}(Member%%s a1 (nil s))->(Member%%s a2 (nil s))->(Eq%%u (f a1) (f a2))->Eq%%s a1 a2]Dis1%%u) ([a:s][xs:list s][x1:not (Member%%s a xs)][x2:Distin%%s xs][x2_ih:{f:s->u}{x3:{a1,a2:s}(Member%%s a1 xs)->(Member%%s a2 xs)->(Eq%%u (f a1) (f a2))->Eq%%s a1 a2}Distin%%u (map%%s%%u f xs)][f:s->u][x3:{a1,a2:s}(Member%%s a1 (cons%%s a xs))->(Member%%s a2 (cons%%s a xs))->(Eq%%u (f a1) (f a2))->Eq%%s a1 a2]Dis2%%u (f a) (list_elim%%s ([_:list s]list u) (nil u) ([y:s][_:list s]([x:s]cons%%u (f x)) y) xs) ([H:Member%%u (f a) (list_elim%%s ([_:list s]list u) (nil u) ([y:s][_:list s]cons%%u (f y)) xs)]Member_map_inv%%s%%u xs (f a) f H absurd ([t:s][H1:Member%%s t xs /\ Eq%%u (f t) (f a)]H1%%absurd ([H2:Member%%s t xs][H3:Eq%%u (f t) (f a)]x1 (Eq_subst%%s%%t%%a (Eq_sym%%s%%a%%t (x3 a t (snd%%((Member%%s a (cons%%s a xs))->(Member%%s a xs \/ Eq%%s a a))%%((Member%%s a xs \/ Eq%%s a a)->Member%%s a (cons%%s a xs)) (Mem_ind|s|xs|a|a) (inr%%(Member%%s a xs)%%(Eq|s a a) (Eq_refl%%s a))) (snd%%((Member%%s t (cons%%s a xs))->(Member%%s t xs \/ Eq%%s a t))%%((Member%%s t xs \/ Eq%%s a t)->Member%%s t (cons%%s a xs)) (Mem_ind|s|xs|a|t) (inl%%(Member%%s t xs)%%(Eq%%s a t) H2)) (Eq_sym%%u%%(f t)%%(f a) H3))) ([z:s]Member%%s z xs) H2)))) (x2_ih f ([a1,a2:s][H:Member%%s a1 xs][H1:Member%%s a2 xs]x3 a1 a2 (snd%%((Member%%s a1 (cons%%s a xs))->(Member%%s a1 xs \/ Eq%%s a a1))%%((Member%%s a1 xs \/ Eq%%s a a1)->Member%%s a1 (cons%%s a xs)) (Mem_ind|s|xs|a|a1) (inl%%(Member%%s a1 xs)%%(Eq%%s a a1) H)) (snd%%((Member%%s a2 (cons%%s a xs))->(Member%%s a2 xs \/ Eq%%s a a2))%%((Member%%s a2 xs \/ Eq%%s a a2)->Member%%s a2 (cons%%s a xs)) (Mem_ind|s|xs|a|a2) (inl%%(Member%%s a2 xs)%%(Eq%%s a a2) H1))))))];
[Distin_prod : {s,u|SET}{l1:list s}{l2:list u}(Distin%%s l1)->(Distin%%u l2)->Distin%%(prod s u) (prod_list%%s%%u l1 l2)
  = [s,u|SET]([Phi:{l1|list s}{z:Distin%%s l1}{l2:list u}(Distin%%u l2)->Distin%%(prod s u) (prod_list%%s%%u l1 l2)][l1:list s][l2:list u][R1:Distin%%s l1]Phi%%l1 R1 l2) (Distin_elim%%s ([l1:list s]{l2:list u}(Distin%%u l2)->Distin%%(prod s u) (prod_list%%s%%u l1 l2)) ([l2:list u][H:Distin%%u l2]Dis1%%(prod s u)) ([a:s][xs:list s][x1:not (Member%%s a xs)][x2:Distin%%s xs][x2_ih:{l2:list u}(Distin%%u l2)->Distin%%(prod s u) (prod_list%%s%%u xs l2)][l2:list u][H:Distin%%u l2]Distin_append%%(prod s u) (map%%u%%(prod s u) (Pair%%s%%u a) l2) (list_elim%%s ([_:list s]list (prod s u)) (nil (prod s u)) ([y:s][_:list s]([a'12:s]append%%(prod s u) (map%%u%%(prod s u) (Pair%%s%%u a'12) l2)) y) xs) (Distin_inj_map%%u%%(prod s u) l2 (Pair%%s%%u a) ([a1,a2:u][H1:Member%%u a1 l2][H2:Member%%u a2 l2][H3:Eq%%(prod s u) (Pair%%s%%u a a1) (Pair%%s%%u a a2)]Eq_resp%%(prod s u)%%u (Snd|s|u)%%(Pair%%s%%u a a1)%%(Pair%%s%%u a a2) H3) H) (x2_ih l2 H) ([a1:prod s u][H1:Member%%(prod s u) a1 (map%%u%%(prod s u) (Pair%%s%%u a) l2)]Member_map_inv%%u%%(prod s u) l2 a1 (Pair%%s%%u a) H1 (not (Member%%(prod s u) a1 (list_elim%%s ([_:list s]list (prod s u)) (nil (prod s u)) ([y:s][_:list s]append%%(prod s u) (map%%u%%(prod s u) (Pair%%s%%u y) l2)) xs))) ([t:u][H2:Member%%u t l2 /\ Eq%%(prod s u) (Pair%%s%%u a t) a1]Eq_subst%%(prod s u)%%(Pair%%s%%u a t)%%a1 (Eq_sym%%(prod s u)%%a1%%(Pair%%s%%u a t) (Eq_sym%%(prod s u)%%(Pair%%s%%u a t)%%a1 (snd%%(Member%%u t l2)%%(Eq%%(prod s u) (Pair%%s%%u a t) a1) H2))) ([z:prod s u]not (Member%%(prod s u) z (list_elim%%s ([_:list s]list (prod s u)) (nil (prod s u)) ([y:s][_:list s]append%%(prod s u) (map%%u%%(prod s u) (Pair%%s%%u y) l2)) xs))) ([H3:Member%%(prod s u) (Pair%%s%%u a t) (list_elim%%s ([_:list s]list (prod s u)) (nil (prod s u)) ([y:s][_:list s]append%%(prod s u) (map%%u%%(prod s u) (Pair%%s%%u y) l2)) xs)]fst%%((Member%%(prod s u) (Pair%%s%%u a t) (prod_list%%s%%u xs l2))->(Member%%s (Fst%%s%%u (Pair%%s%%u a t)) xs /\ Member%%u (Snd%%s%%u (Pair%%s%%u a t)) l2))%%((Member%%s (Fst%%s%%u (Pair%%s%%u a t)) xs /\ Member%%u (Snd%%s%%u (Pair%%s%%u a t)) l2)->Member%%(prod s u) (Pair%%s%%u a t) (prod_list%%s%%u xs l2)) (Member_prod%%s%%u xs l2 (Pair%%s%%u a t)) H3%%absurd ([H4:Member%%s (Fst%%s%%u (Pair%%s%%u a t)) xs][H5:Member%%u (Snd%%s%%u (Pair%%s%%u a t)) l2]x1 H4))))))];
[Distin_inj_build : {s|SET}{f:nat->s}{n:nat}({k1,k2:nat}(Lt k1 n)->(Lt k2 n)->(Eq%%s (f k1) (f k2))->Eq%%nat k1 k2)->Distin%%s (build_list%%s f n)
  = [s|SET][f:nat->s]nat_ind ([n:nat]({k1,k2:nat}(Lt k1 n)->(Lt k2 n)->(Eq%%s (f k1) (f k2))->Eq%%nat k1 k2)->Distin%%s (build_list%%s f n)) ([H:{k1,k2:nat}(Lt k1 zero)->(Lt k2 zero)->(Eq%%s (f k1) (f k2))->Eq%%nat k1 k2]Dis1%%s) ([n:nat][H:({k1,k2:nat}(Lt k1 n)->(Lt k2 n)->(Eq%%s (f k1) (f k2))->Eq%%nat k1 k2)->Distin%%s (build_list%%s f n)][H1:{k1,k2:nat}(Lt k1 (suc n))->(Lt k2 (suc n))->(Eq%%s (f k1) (f k2))->Eq%%nat k1 k2]Dis2%%s (f n) (nat_elim ([_:nat]list s) (nil s) ([k:nat]cons%%s (f k)) n) ([H2:Member%%s (f n) (build_list%%s f n)]fst%%((Member%%s (f n) (build_list%%s f n))->Ex%%nat ([k:nat](Lt k n /\ Eq%%s (f k) (f n))))%%((Ex%%nat ([k:nat](Lt k n /\ Eq%%s (f k) (f n))))->Member%%s (f n) (build_list%%s f n)) (Member_build|s f n (f n)) H2 absurd ([t:nat][H3:Lt t n /\ Eq%%s (f t) (f n)]not_refl_Lt n (Eq_subst%%nat%%t%%n (H1 t n (Lt_trans%%t%%n%%(suc n) (fst%%(Lt t n)%%(Eq%%s (f t) (f n)) H3) (n_Lt_suc_n n)) (n_Lt_suc_n n) (snd%%(Lt t n)%%(Eq%%s (f t) (f n)) H3)) ([b:nat]Lt b n) (fst%%(Lt t n)%%(Eq%%s (f t) (f n)) H3)))) (H ([k1,k2:nat][H2:Lt k1 n][H3:Lt k2 n][H4:Eq%%s (f k1) (f k2)]H1 k1 k2 (Lt_trans%%k1%%n%%(suc n) H2 (n_Lt_suc_n n)) (Lt_trans%%k2%%n%%(suc n) H3 (n_Lt_suc_n n)) H4)))];
[Distin_sublist_Le_length : {s|SET}{xs,ys:list s}(Distin%%s xs)->({a:s}(Member%%s a xs)->Member%%s a ys)->Le (length%%s xs) (length%%s ys)
  = [s|SET]([Phi:{xs|list s}{z:Distin%%s xs}{ys:list s}({a:s}(Member%%s a xs)->Member%%s a ys)->Le (length%%s xs) (length%%s ys)][xs,ys:list s][R1:Distin%%s xs]Phi%%xs R1 ys) (Distin_elim%%s ([xs:list s]{ys:list s}({a:s}(Member%%s a xs)->Member%%s a ys)->Le (length%%s xs) (length%%s ys)) ([ys:list s][H:{a:s}(Member%%s a (nil s))->Member%%s a ys]Le_zero_n (length%%s ys)) ([a:s][xs:list s][x1:not (Member%%s a xs)][x2:Distin%%s xs][x2_ih:{ys:list s}({a'7:s}(Member%%s a'7 xs)->Member%%s a'7 ys)->Le (length%%s xs) (length%%s ys)][ys:list s][H:{a'8:s}(Member%%s a'8 (cons%%s a xs))->Member%%s a'8 ys]H a (snd%%((Member%%s a (cons%%s a xs))->(Member%%s a xs \/ Eq%%s a a))%%((Member%%s a xs \/ Eq%%s a a)->Member%%s a (cons%%s a xs)) (Mem_ind|s|xs|a|a) (inr%%(Member%%s a xs)%%(Eq|s a a) (Eq_refl%%s a))) (Le (length%%s (cons%%s a xs)) (length%%s ys)) ([t:list s][H1:Adjoin%%s a t ys]Eq_subst%%nat%%(suc (length%%s t))%%(length%%s ys) (Eq_sym%%nat%%(length%%s ys)%%(suc (length%%s t)) (Adjoin_length_suc%%s%%a%%t%%ys H1)) ([z:nat]Le (length%%s (cons%%s a xs)) z) (Le_resp_suc (list_elim%%s ([_:list s]nat) zero ([y:s][_:list s]([_:s]suc) y) xs) (length%%s t) (x2_ih t ([a1:s][H2:Member%%s a1 xs]Member_Adjoin%%s%%t%%ys%%a%%a1 ([H3:Eq%%s a a1]x1 (Eq_subst%%s%%a1%%a (Eq_sym%%s%%a%%a1 H3) ([z:s]Member%%s z xs) H2)) H1 (H a1 (snd%%((Member%%s a1 (cons%%s a xs))->(Member%%s a1 xs \/ Eq%%s a a1))%%((Member%%s a1 xs \/ Eq%%s a a1)->Member%%s a1 (cons%%s a xs)) (Mem_ind|s|xs|a|a1) (inl%%(Member%%s a1 xs)%%(Eq%%s a a1) H2)))))))))];
