Module lib_list_sorted Import "lib_list_PermII";
[lengthisahomomorphismcons : {A|Type}{l|list A}{n|nat}{eq:Eq%%nat (suc n) (length%%A l)}Ex%%A ([a:A]Eq%%(list A) l (cons%%A a (tail%%A l)))
  = [A|Type][l|list A]list_elim%%A ([l'3:list A]{n|nat}{eq:Eq%%nat (suc n) (length%%A l'3)}Ex%%A ([a:A]Eq%%(list A) l'3 (cons%%A a (tail%%A l'3)))) ([n|nat][eq:Eq%%nat (suc n) (length%%A (nil A))]suc_not_zero (ExIntro%%nat n ([m:nat]Eq%%nat (suc m) zero) eq) (Ex%%A ([a:A]Eq%%(list A) (nil A) (cons%%A a (tail%%A (nil A)))))) ([x1:A][x2:list A][x2_ih:{n|nat}{eq:Eq%%nat (suc n) (length%%A x2)}Ex%%A ([a:A]Eq%%(list A) x2 (cons%%A a (tail%%A x2)))][n|nat][eq:Eq%%nat (suc n) (length%%A (cons%%A x1 x2))]ExIntro%%A x1 ([a:A]Eq%%(list A) (cons%%A x1 x2) (cons%%A a (tail%%A (cons%%A x1 x2)))) (Eq_refl%%(list A) (cons%%A x1 x2))) l];
[Rlist : {A|Type}{B|Type}{R:Rel A B}{a:A}(list B)->Prop
  = [A|Type][B|Type][R:Rel A B][a:A]list_rec%%B%%Prop trueProp ([b:B][_:list B][P:Prop](R a b /\ P))];
[Sorted : {A|Type}{R:Rel A A}Pred (list A)
  = [A|Type][R:Rel A A]list_rec%%A%%Prop trueProp ([a:A][l:list A][P:Prop](Rlist%%A%%A R a l /\ P))];
[SortSpec : {A|Type}{R:Rel A A}Rel (list A) (list A)
  = [A|Type][R:Rel A A][l,m:list A](Sorted%%A R m /\ Perm%%A l m)];
[sortedlistinduction : {A|Type}{R:Rel A A}{B|Type}{phi:Rel (list A) B}{n|B}{c|A->(list A)->B->B}(phi (nil A) n)->({a|A}{l|list A}{b|B}(Sorted%%A R (cons%%A a l))->(phi l b)->phi (cons%%A a l) (c a l b))->{l:list A}(Sorted%%A R l)->phi l (list_rec%%A%%B n ([a:A][l'12:list A][b:B]c a l'12 b) l)
  = [A|Type][R:Rel A A][B|Type][phi:Rel (list A) B][n|B][c|A->(list A)->B->B][H:phi (nil A) n][H1:{a|A}{l|list A}{b|B}(Sorted%%A R (cons%%A a l))->(phi l b)->phi (cons%%A a l) (c a l b)][l:list A][H2:Sorted%%A R l]list_elim%%A ([l'11:list A](Sorted%%A R l'11)->phi l'11 (list_rec%%A%%B n ([a:A][l'14:list A][b:B]c a l'14 b) l'11)) ([H3:Sorted%%A R (nil A)]H) ([x1:A][x2:list A][x2_ih:(Sorted%%A R x2)->phi x2 (list_rec%%A%%B n ([a:A][l'15:list A][b:B]c a l'15 b) x2)][H3:Sorted%%A R (cons%%A x1 x2)]H3%%(phi (cons%%A x1 x2) (list_rec%%A%%B n ([a:A][l'16:list A][b:B]c a l'16 b) (cons%%A x1 x2))) ([H4:Rlist%%A%%A R x1 x2][H5:list_elim%%A ([_:list A]Prop) trueProp ([a:A][l'17:list A][P:Prop](Rlist%%A%%A R a l'17 /\ P)) x2]H1%%x1%%x2%%(list_elim%%A ([_:list A]B) n ([a:A][l'18:list A][b:B]c a l'18 b) x2) H3 (x2_ih H5))) l H2];
[nilSorted : {A|Type}{R:Rel A A}Sorted%%A R (nil A)
  = [A|Type][R:Rel A A][P:Prop][H:P]H];
[nilRlist : {A|Type}{R:Rel A A}{c|A}Rlist%%A%%A R c (nil A)
  = [A|Type][R:Rel A A][c|A][P:Prop][H:P]H];
[heredSortedlemma : {A|Type}{R:Rel A A}{b|A}{n|list A}(Sorted%%A R (cons%%A b n))->Sorted%%A R n
  = [A|Type][R:Rel A A][b|A][n|list A][H:Sorted%%A R (cons%%A b n)]H%%(Sorted%%A R n) ([H1:Rlist%%A%%A R b n][H2:list_elim%%A ([_:list A]Prop) trueProp ([a:A][l:list A][P:Prop](Rlist%%A%%A R a l /\ P)) n]H2)];
[SortedImpliesRlist : {A|Type}{R:Rel A A}{b|A}{n|list A}(Sorted%%A R (cons%%A b n))->Rlist%%A%%A R b n
  = [A|Type][R:Rel A A][b|A][n|list A][H:Sorted%%A R (cons%%A b n)]H%%(Rlist%%A%%A R b n) ([H1:Rlist%%A%%A R b n][H2:list_elim%%A ([_:list A]Prop) trueProp ([a:A][l:list A][P:Prop](Rlist%%A%%A R a l /\ P)) n]H1)];
[heredRlistlemma : {A|Type}{R:Rel A A}{b,c|A}{n|list A}(Rlist%%A%%A R c (cons%%A b n))->Rlist%%A%%A R c n
  = [A|Type][R:Rel A A][b,c|A][n|list A][H:Rlist%%A%%A R c (cons%%A b n)]H%%(Rlist%%A%%A R c n) ([H1:R c b][H2:list_elim%%A ([_:list A]Prop) trueProp ([b'8:A][_:list A][P:Prop](R c b'8 /\ P)) n]H2)];
[heredRlist1 : {A|Type}{R:Rel A A}{c|A}{m,n|list A}(Rlist%%A%%A R c (append%%A m n))->Rlist%%A%%A R c n
  = [A|Type][R:Rel A A][c|A][m,n|list A]list_elim%%A ([m'6|list A](Rlist%%A%%A R c (append%%A m'6 n))->Rlist%%A%%A R c n) ([H:Rlist%%A%%A R c (append%%A (nil A) n)]H) ([x1:A][x2:list A][x2_ih:(Rlist%%A%%A R c (append%%A x2 n))->Rlist%%A%%A R c n][H:Rlist%%A%%A R c (append%%A (cons%%A x1 x2) n)]x2_ih (heredRlistlemma%%A R%%x1%%c%%(append%%A x2 n) H)) m];
[heredRlist2 : {A|Type}{R:Rel A A}{c|A}{m,n|list A}(Rlist%%A%%A R c (append%%A m n))->Rlist%%A%%A R c m
  = [A|Type][R:Rel A A][c|A][m,n|list A]list_elim%%A ([m'6|list A](Rlist%%A%%A R c (append%%A m'6 n))->Rlist%%A%%A R c m'6) ([H:Rlist%%A%%A R c (append%%A (nil A) n)]nilRlist%%A R%%c) ([x1:A][x2:list A][x2_ih:(Rlist%%A%%A R c (append%%A x2 n))->Rlist%%A%%A R c x2][H:Rlist%%A%%A R c (append%%A (cons%%A x1 x2) n)]H%%(Rlist%%A%%A R c (cons%%A x1 x2)) ([H1:R c x1][H2:list_elim%%A ([_:list A]Prop) trueProp ([b:A][_:list A][P:Prop](R c b /\ P)) (list_elim%%A ([_:list A]list A) n ([y:A][_:list A]cons|A y) x2)]pair%%(R c x1)%%(list_elim%%A ([_:list A]Prop) trueProp ([b:A][_:list A][P:Prop](R c b /\ P)) x2) H1 (x2_ih H2))) m];
[appclRlist : {A|Type}{R:Rel A A}{c|A}{m,n|list A}(Rlist%%A%%A R c m)->(Rlist%%A%%A R c n)->Rlist%%A%%A R c (append%%A m n)
  = [A|Type][R:Rel A A][c|A][m,n|list A][H:Rlist%%A%%A R c m][H1:Rlist%%A%%A R c n]list_elim%%A ([m'8:list A](Rlist%%A%%A R c m'8)->Rlist%%A%%A R c (append%%A m'8 n)) ([H2:Rlist%%A%%A R c (nil A)]H1) ([x1:A][x2:list A][x2_ih:(Rlist%%A%%A R c x2)->Rlist%%A%%A R c (append%%A x2 n)][H2:Rlist%%A%%A R c (cons%%A x1 x2)]H2%%(Rlist%%A%%A R c (append%%A (cons%%A x1 x2) n)) ([H3:R c x1][H4:list_elim%%A ([_:list A]Prop) trueProp ([b:A][_:list A][P:Prop](R c b /\ P)) x2]pair%%(R c x1)%%(list_elim%%A ([_:list A]Prop) trueProp ([b:A][_:list A][P:Prop](R c b /\ P)) (list_elim%%A ([_:list A]list A) n ([y:A][_:list A]cons|A y) x2)) H3 (x2_ih H4))) m H];
[heredSorted : {A|Type}{R:Rel A A}{m,n|list A}(Sorted%%A R (append%%A m n))->(Sorted%%A R m /\ Sorted%%A R n)
  = [A|Type][R:Rel A A][m,n|list A]list_elim%%A ([m'5|list A](Sorted%%A R (append%%A m'5 n))->(Sorted%%A R m'5 /\ Sorted%%A R n)) ([H:Sorted%%A R (append%%A (nil A) n)]pair%%(Sorted%%A R (nil A))%%(Sorted%%A R n) (nilSorted%%A R) H) ([x1:A][x2:list A][x2_ih:(Sorted%%A R (append%%A x2 n))->(Sorted%%A R x2 /\ Sorted%%A R n)][H:Sorted%%A R (append%%A (cons%%A x1 x2) n)]H%%(Sorted%%A R (cons%%A x1 x2) /\ Sorted%%A R n) ([H1:Rlist%%A%%A R x1 (list_elim%%A ([_:list A]list A) n ([y:A][_:list A]cons|A y) x2)][H2:list_elim%%A ([_:list A]Prop) trueProp ([a:A][l:list A][P:Prop](Rlist%%A%%A R a l /\ P)) (list_elim%%A ([_:list A]list A) n ([y:A][_:list A]cons|A y) x2)]x2_ih H2%%(Sorted%%A R (cons%%A x1 x2) /\ Sorted%%A R n) ([H3:Sorted%%A R x2][H4:Sorted%%A R n]pair%%(Sorted%%A R (cons%%A x1 x2))%%(Sorted%%A R n) (pair%%(Rlist%%A%%A R x1 x2)%%(list_elim%%A ([_:list A]Prop) trueProp ([a:A][l:list A][P:Prop](Rlist%%A%%A R a l /\ P)) x2) (heredRlist2%%A R%%x1%%x2%%n H1) H3) H4))) m];
[RlistIsMonotone : {A|Type}{R:Rel A A}{transR:trans%%A R}{b,c|A}{m|list A}(R c b)->(Rlist%%A%%A R b m)->Rlist%%A%%A R c m
  = [A|Type][R:Rel A A][transR:trans%%A R][b,c|A][m|list A]list_elim%%A ([m'7|list A](R c b)->(Rlist%%A%%A R b m'7)->Rlist%%A%%A R c m'7) ([H:R c b][H1:Rlist%%A%%A R b (nil A)]nilRlist%%A R%%c) ([x1:A][x2:list A][x2_ih:(R c b)->(Rlist%%A%%A R b x2)->Rlist%%A%%A R c x2][H:R c b][H1:Rlist%%A%%A R b (cons%%A x1 x2)]H1%%(Rlist%%A%%A R c (cons%%A x1 x2)) ([H2:R b x1][H3:list_elim%%A ([_:list A]Prop) trueProp ([b'13:A][_:list A][P:Prop](R b b'13 /\ P)) x2]pair%%(R c x1)%%(list_elim%%A ([_:list A]Prop) trueProp ([b'14:A][_:list A][P:Prop](R c b'14 /\ P)) x2) (transR%%c%%b%%x1 H H2) (x2_ih H H3))) m];
[PermPreservesRlist : {A|Type}{R:Rel A A}{c|A}{m,n|list A}(Perm%%A m n)->(Rlist%%A%%A R c m)->Rlist%%A%%A R c n
  = [A|Type][R:Rel A A][c|A][m,n|list A]PermPredE%%A (Rlist%%A%%A R c) ([l,m1:list A][H:Rlist%%A%%A R c (append%%A l m1)]appclRlist%%A R%%c%%m1%%l (heredRlist1%%A R%%c%%l%%m1 H) (heredRlist2%%A R%%c%%l%%m1 H)) ([b1:A][l,m1:list A][cons_prem:Perm%%A l m1][cons_ih:iff (Rlist%%A%%A R c l) (Rlist%%A%%A R c m1)][H:Rlist%%A%%A R c (cons%%A b1 l)]cons_ih%%(Rlist%%A%%A R c (cons%%A b1 m1)) (H%%(((Rlist%%A%%A R c l)->Rlist%%A%%A R c m1)->((Rlist%%A%%A R c m1)->Rlist%%A%%A R c l)->Rlist%%A%%A R c (cons%%A b1 m1)) ([H1:R c b1][H2:list_elim%%A ([_:list A]Prop) trueProp ([b:A][_:list A][P:Prop](R c b /\ P)) l][H3:(Rlist%%A%%A R c l)->Rlist%%A%%A R c m1][H4:(Rlist%%A%%A R c m1)->Rlist%%A%%A R c l]pair%%(R c b1)%%(list_elim%%A ([_:list A]Prop) trueProp ([b:A][_:list A][P:Prop](R c b /\ P)) m1) H1 (H3 H2)))) m n];
[SortedPermsHaveRHeads : {A|Type}{R:Rel A A}{reflR:refl%%A R}{b,c|A}{m,n|list A}(Sorted%%A R (cons%%A b m))->(Sorted%%A R (cons%%A c n))->(Perm%%A (cons%%A b m) (cons%%A c n))->R b c
  = [A|Type][R:Rel A A][reflR:refl%%A R][b,c|A][m,n|list A][H:Sorted%%A R (cons%%A b m)][H1:Sorted%%A R (cons%%A c n)][H2:Perm%%A (cons%%A b m) (cons%%A c n)]fst%%(R b c)%%(Rlist%%A%%A R b n) (PermPreservesRlist%%A R%%b%%(cons%%A b m)%%(cons%%A c n) H2 (pair%%(R b b)%%(list_elim%%A ([_:list A]Prop) trueProp ([b'11:A][_:list A][P:Prop](R b b'11 /\ P)) m) (reflR b) (SortedImpliesRlist%%A R%%b%%m H)))];
[SortedPermsHaveEqualHeads : {A|Type}{R:Rel A A}{reflR:refl%%A R}{antisymR:{a,b|A}(R a b)->(R b a)->Eq%%A a b}{b,c|A}{m,n|list A}(Sorted%%A R (cons%%A b m))->(Sorted%%A R (cons%%A c n))->(Perm%%A (cons%%A b m) (cons%%A c n))->Eq%%A b c
  = [A|Type][R:Rel A A][reflR:refl%%A R][antisymR:{a,b|A}(R a b)->(R b a)->Eq%%A a b][b,c|A][m,n|list A][H:Sorted%%A R (cons%%A b m)][H1:Sorted%%A R (cons%%A c n)][H2:Perm%%A (cons%%A b m) (cons%%A c n)]antisymR%%b%%c (SortedPermsHaveRHeads%%A R reflR%%b%%c%%m%%n H H1 H2) (SortedPermsHaveRHeads%%A R reflR%%c%%b%%n%%m H1 H (symPerm%%A%%(cons%%A b m)%%(cons%%A c n) H2))];
[SortedPermsAreEqual : {A|Type}{R:Rel A A}{reflR:refl%%A R}{antisymR:{a,b|A}(R a b)->(R b a)->Eq%%A a b}{l,m|list A}{sortedl:Sorted%%A R l}{sortedm:Sorted%%A R m}{permlm:Perm%%A l m}Eq%%(list A) l m
  = [A|Type][R:Rel A A][reflR:refl%%A R][antisymR:{a,b|A}(R a b)->(R b a)->Eq%%A a b]list_elim%%A ([l|list A]{m|list A}{sortedl:Sorted%%A R l}{sortedm:Sorted%%A R m}{permlm:Perm%%A l m}Eq%%(list A) l m) ([m|list A][sortedl:Sorted%%A R (nil A)][sortedm:Sorted%%A R m][permlm:Perm%%A (nil A) m]nilPerm%%A m permlm) ([x1:A][x2:list A][x2_ih:{m|list A}{sortedl:Sorted%%A R x2}{sortedm:Sorted%%A R m}{permlm:Perm%%A x2 m}Eq%%(list A) x2 m][m|list A][sortedl:Sorted%%A R (cons%%A x1 x2)][sortedm:Sorted%%A R m][permlm:Perm%%A (cons%%A x1 x2) m]lengthisahomomorphismcons%%A%%m%%(list_elim%%A ([_:list A]nat) zero ([y:A][_:list A]([_:A]suc) y) x2) (PermRespLength%%A%%(cons%%A x1 x2)%%m permlm) (Eq%%(list A) (cons%%A x1 x2) m) ([c:A][eq:Eq%%(list A) m (cons%%A c (tail%%A m))]Eq_subst%%(list A)%%(cons%%A c (tail%%A m))%%m (Eq_sym%%(list A)%%m%%(cons%%A c (tail%%A m)) eq) ([z:list A]Eq%%(list A) (cons%%A x1 x2) z) (sortedl%%(Eq%%(list A) (cons%%A x1 x2) (cons%%A c (tail%%A m))) ([H:Rlist%%A%%A R x1 x2][H1:list_elim%%A ([_:list A]Prop) trueProp ([a:A][l:list A][P:Prop](Rlist%%A%%A R a l /\ P)) x2]Eq_subst%%A%%c%%x1 (Eq_sym%%A%%x1%%c (SortedPermsHaveEqualHeads%%A R reflR antisymR%%x1%%c%%x2%%(tail%%A m) sortedl (Eq_subst%%(list A)%%m%%(cons%%A c (tail%%A m)) (Eq_sym%%(list A)%%(cons%%A c (tail%%A m))%%m (Eq_sym%%(list A)%%m%%(cons%%A c (tail%%A m)) eq)) ([z:list A]Sorted%%A R z) sortedm) (Eq_subst%%(list A)%%m%%(cons%%A c (tail%%A m)) (Eq_sym%%(list A)%%(cons%%A c (tail%%A m))%%m (Eq_sym%%(list A)%%m%%(cons%%A c (tail%%A m)) eq)) ([z:list A]Perm%%A (cons%%A x1 x2) z) permlm))) ([z:A]Eq%%(list A) (cons%%A z x2) (cons%%A c (tail%%A m))) (Eq_resp%%(list A)%%(list A) (cons%%A c)%%x2%%(tail%%A m) (x2_ih%%(tail%%A m) H1 (snd%%(Rlist%%A%%A R c (tail%%A m))%%(list_elim%%A ([_:list A]Prop) trueProp ([a:A][l:list A][P:Prop](Rlist%%A%%A R a l /\ P)) (tail%%A m)) (Eq_subst%%(list A)%%m%%(cons%%A c (tail%%A m)) (Eq_sym%%(list A)%%(cons%%A c (tail%%A m))%%m (Eq_sym%%(list A)%%m%%(cons%%A c (tail%%A m)) eq)) ([z:list A]Sorted%%A R z) sortedm)) (heredPermlemma%%A c%%x2%%(tail%%A m) (symPerm%%A%%(cons%%A c (tail%%A m))%%(cons%%A c x2) (Eq_subst%%(list A)%%m%%(cons%%A c (tail%%A m)) (Eq_sym%%(list A)%%(cons%%A c (tail%%A m))%%m (Eq_sym%%(list A)%%m%%(cons%%A c (tail%%A m)) eq)) ([z:list A]Perm%%A z (cons%%A c x2)) (Eq_subst%%A%%x1%%c (Eq_sym%%A%%c%%x1 (Eq_sym%%A%%x1%%c (SortedPermsHaveEqualHeads%%A R reflR antisymR%%x1%%c%%x2%%(tail%%A m) sortedl (Eq_subst%%(list A)%%m%%(cons%%A c (tail%%A m)) (Eq_sym%%(list A)%%(cons%%A c (tail%%A m))%%m (Eq_sym%%(list A)%%m%%(cons%%A c (tail%%A m)) eq)) ([z:list A]Sorted%%A R z) sortedm) (Eq_subst%%(list A)%%m%%(cons%%A c (tail%%A m)) (Eq_sym%%(list A)%%(cons%%A c (tail%%A m))%%m (Eq_sym%%(list A)%%m%%(cons%%A c (tail%%A m)) eq)) ([z:list A]Perm%%A (cons%%A x1 x2) z) permlm)))) ([z:A]Perm%%A m (cons%%A z x2)) (symPerm%%A%%(cons%%A x1 x2)%%m permlm)))))))))))];
