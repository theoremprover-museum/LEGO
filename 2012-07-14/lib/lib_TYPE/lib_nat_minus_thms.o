Module lib_nat_minus_thms Import "lib_nat_plus_thms";
[minus_suc_pred : {n,m:nat}Eq%%nat (minus n (suc m)) (minus (pred n) m)
  = [n:nat]nat_ind ([m:nat]Eq%%nat (minus n (suc m)) (minus (pred n) m)) (Eq_refl%%nat (minus n (suc zero))) ([n1:nat][ih:Eq%%nat (minus n (suc n1)) (minus (pred n) n1)]Eq_resp_pred%%(nat_elim ([_:nat]nat) n ([_:nat]pred) (suc n1))%%(nat_elim ([_:nat]nat) (pred n) ([_:nat]pred) n1) ih)];
[minus_resp_suc : {m,n:nat}Eq%%nat (minus (suc m) (suc n)) (minus m n)
  = [m,n:nat]Eq_subst%%nat%%(minus (pred (suc m)) n)%%(minus (suc m) (suc n)) (Eq_sym%%nat%%(minus (suc m) (suc n))%%(minus (pred (suc m)) n) (minus_suc_pred (suc m) n)) ([z:nat]Eq%%nat z (minus m n)) (Eq_refl%%nat (minus (pred (suc m)) n))];
[n_minus_n_Eq_zero : {n:nat}Eq%%nat (minus n n) zero
  = nat_ind ([n:nat]Eq%%nat (minus n n) zero) (Eq_refl%%nat (minus zero zero)) ([n:nat][ih:Eq%%nat (minus n n) zero]Eq_subst%%nat%%(minus (pred (suc n)) n)%%(minus (suc n) (suc n)) (Eq_sym%%nat%%(minus (suc n) (suc n))%%(minus (pred (suc n)) n) (minus_suc_pred (suc n) n)) ([z:nat]Eq%%nat z zero) ih)];
[zero_minus_n_Eq_zero : {n:nat}Eq%%nat (minus zero n) zero
  = nat_ind ([n:nat]Eq%%nat (minus zero n) zero) (Eq_refl%%nat (minus zero zero)) ([n:nat][ih:Eq%%nat (minus zero n) zero]Eq_subst%%nat%%(minus (pred zero) n)%%(minus zero (suc n)) (Eq_sym%%nat%%(minus zero (suc n))%%(minus (pred zero) n) (minus_suc_pred zero n)) ([z:nat]Eq%%nat z zero) ih)];
[minus_commutes_suc_l : {m,n,t|nat}(Eq%%nat (minus n m) (suc t))->Eq%%nat (minus (suc n) m) (suc (minus n m))
  = nat_double_elim ([m,n:nat]{t:nat}(Eq%%nat (minus n m) (suc t))->Eq%%nat (minus (suc n) m) (suc (minus n m))) ([t:nat][H:Eq%%nat (minus zero zero) (suc t)]Eq_refl%%nat (minus (suc zero) zero)) ([n:nat][H:{t:nat}(Eq%%nat (minus n zero) (suc t))->Eq%%nat (minus (suc n) zero) (suc (minus n zero))][t:nat][H1:Eq%%nat (minus (suc n) zero) (suc t)]Eq_refl%%nat (minus (suc (suc n)) zero)) ([m:nat][H:{n,t:nat}(Eq%%nat (minus n m) (suc t))->Eq%%nat (minus (suc n) m) (suc (minus n m))][t:nat][H1:Eq%%nat (minus zero (suc m)) (suc t)]zero_not_suc t (Eq_subst%%nat%%(minus zero (suc m))%%(suc t) (Eq_sym%%nat%%(suc t)%%(minus zero (suc m)) (Eq_sym%%nat%%(minus zero (suc m))%%(suc t) H1)) ([z:nat]Eq%%nat zero z) (Eq_subst%%nat%%zero%%(minus zero (suc m)) (Eq_sym%%nat%%(minus zero (suc m))%%zero (zero_minus_n_Eq_zero (suc m))) ([z:nat]Eq%%nat zero z) (Eq_refl%%nat zero))) (Eq%%nat (minus (suc zero) (suc m)) (suc (minus zero (suc m))))) ([m:nat][H:{n,t:nat}(Eq%%nat (minus n m) (suc t))->Eq%%nat (minus (suc n) m) (suc (minus n m))][n:nat][H1:{t:nat}(Eq%%nat (minus n (suc m)) (suc t))->Eq%%nat (minus (suc n) (suc m)) (suc (minus n (suc m)))][t:nat][H2:Eq%%nat (minus (suc n) (suc m)) (suc t)]Eq_subst%%nat%%(minus (suc n) m)%%(minus (suc (suc n)) (suc m)) (Eq_sym%%nat%%(minus (suc (suc n)) (suc m))%%(minus (suc n) m) (minus_resp_suc (suc n) m)) ([z:nat]Eq%%nat z (suc (minus (suc n) (suc m)))) (Eq_subst%%nat%%(minus n m)%%(minus (suc n) (suc m)) (Eq_sym%%nat%%(minus (suc n) (suc m))%%(minus n m) (minus_resp_suc n m)) ([z:nat]Eq%%nat (minus (suc n) m) (suc z)) (H n t (Eq_subst%%nat%%(minus (suc n) (suc m))%%(minus n m) (Eq_sym%%nat%%(minus n m)%%(minus (suc n) (suc m)) (Eq_sym%%nat%%(minus (suc n) (suc m))%%(minus n m) (minus_resp_suc n m))) ([z:nat]Eq%%nat z (suc t)) H2))))];
[minus_commutes_suc_r : {m,n,t|nat}(Eq%%nat (minus n m) (suc t))->Eq%%nat (minus n (suc m)) t
  = [m,n,t|nat][H:Eq%%nat (minus n m) (suc t)]Eq_subst%%nat%%(suc t)%%(minus n m) (Eq_sym%%nat%%(minus n m)%%(suc t) H) ([z:nat]Eq%%nat (pred z) t) (Eq_refl%%nat (pred (suc t)))];
[minus_monotone_l : {l:nat}{m,n,t|nat}(Eq%%nat (minus n m) (suc t))->Eq%%nat (minus (plus n l) m) (suc (plus t l))
  = nat_ind ([l:nat]{m,n,t|nat}(Eq%%nat (minus n m) (suc t))->Eq%%nat (minus (plus n l) m) (suc (plus t l))) ([m,n,t|nat][H:Eq%%nat (minus n m) (suc t)]Eq_subst%%nat%%n%%(plus n zero) (Eq_sym%%nat%%(plus n zero)%%n (plus_zero n)) ([z:nat]Eq%%nat (minus z m) (suc (plus t zero))) (Eq_subst%%nat%%t%%(plus t zero) (Eq_sym%%nat%%(plus t zero)%%t (plus_zero t)) ([z:nat]Eq%%nat (minus n m) (suc z)) H)) ([n:nat][H:{m,n'3,t|nat}(Eq%%nat (minus n'3 m) (suc t))->Eq%%nat (minus (plus n'3 n) m) (suc (plus t n))][m,n1,t|nat][H1:Eq%%nat (minus n1 m) (suc t)]Eq_subst%%nat%%(suc (plus n1 n))%%(plus n1 (suc n)) (Eq_sym%%nat%%(plus n1 (suc n))%%(suc (plus n1 n)) (plus_suc n1 n)) ([z:nat]Eq%%nat (minus z m) (suc (plus t (suc n)))) (Eq_subst%%nat%%(suc (plus t n))%%(plus t (suc n)) (Eq_sym%%nat%%(plus t (suc n))%%(suc (plus t n)) (plus_suc t n)) ([z:nat]Eq%%nat (minus (suc (plus n1 n)) m) (suc z)) (H|m|(suc n1)|(suc t) (Eq_subst%%nat%%(minus n1 m)%%(suc t) (Eq_sym%%nat%%(suc t)%%(minus n1 m) (Eq_sym%%nat%%(minus n1 m)%%(suc t) H1)) ([z:nat]Eq%%nat (minus (suc n1) m) (suc z)) (minus_commutes_suc_l%%m%%n1%%t H1)))))];
[minus_inv_plus : {m,n:nat}Eq%%nat n (minus (plus m n) m)
  = [m,n:nat]nat_ind ([m'3:nat]Eq%%nat n (minus (plus m'3 n) m'3)) (Eq_refl%%nat n) ([n1:nat][H:Eq%%nat n (minus (plus n1 n) n1)]Eq_subst%%nat%%(minus (plus n1 n) n1)%%(minus (suc (plus n1 n)) (suc n1)) (Eq_sym%%nat%%(minus (suc (plus n1 n)) (suc n1))%%(minus (plus n1 n) n1) (minus_resp_suc (plus n1 n) n1)) ([z:nat]Eq%%nat n z) H) m];
[nonzero_inv_sp : {x:nat}(not (Eq%%nat x zero))->Eq%%nat (suc (pred x)) x
  = nat_ind ([x:nat](not (Eq%%nat x zero))->Eq%%nat (suc (pred x)) x) ([H:not (Eq%%nat zero zero)]H (Eq_refl%%nat zero) (Eq%%nat (suc (pred zero)) zero)) ([n:nat][H:(not (Eq%%nat n zero))->Eq%%nat (suc (pred n)) n][H1:not (Eq%%nat (suc n) zero)]Eq_refl%%nat (suc (pred (suc n))))];
