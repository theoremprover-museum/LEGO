Module lib_nat_rels Import "lib_nat_Prop_rels" "lib_nat_bool_rels";
[le_true_imp_Le : {n,m:nat}(Eq%%bool (le n m) true)->Le n m
  = [n,m:nat]nat_diagonal_ind ([n'3,m'4:nat](Eq%%bool (le n'3 m'4) true)->Le n'3 m'4) ([m1:nat][H:Eq%%bool (le zero m1) true]Le_zero_n m1) ([n1:nat][H:Eq%%bool (le (suc n1) zero) true]true_not_false (Eq_sym%%bool%%false%%true H) (Le (suc n1) zero)) ([n1,m1:nat][H:(Eq%%bool (le n1 m1) true)->Le n1 m1][H1:Eq%%bool (le (suc n1) (suc m1)) true]Le_resp_suc n1 m1 (H H1)) n m];
[le_false_imp_Lt : {n,m:nat}(Eq%%bool (le n m) false)->Lt m n
  = [n,m:nat]nat_diagonal_ind ([n'3,m'4:nat](Eq%%bool (le n'3 m'4) false)->Lt m'4 n'3) ([m1:nat][H:Eq%%bool (le zero m1) false]true_not_false H (Lt m1 zero)) ([n1:nat][H:Eq%%bool (le (suc n1) zero) false]zero_Lt_suc_n n1) ([n1,m1:nat][H:(Eq%%bool (le n1 m1) false)->Lt m1 n1][H1:Eq%%bool (le (suc n1) (suc m1)) false]Lt_resp_suc m1 n1 (H H1)) n m];
[Le_imp_le_true : {n,m:nat}(Le n m)->Eq%%bool (le n m) true
  = [n,m:nat]nat_diagonal_ind ([n'3,m'4:nat](Le n'3 m'4)->Eq%%bool (le n'3 m'4) true) ([m1:nat][H:Le zero m1]Eq_refl%%bool (le zero m1)) ([n1:nat][H:Le (suc n1) zero]not_Le_zero_n n1 H (Eq%%bool (le (suc n1) zero) true)) ([n1,m1:nat][H:(Le n1 m1)->Eq%%bool (le n1 m1) true][H1:Le (suc n1) (suc m1)]H (Le_resp_pred n1 m1 H1)) n m];
[Lt_imp_le_false : {n,m:nat}(Lt m n)->Eq%%bool (le n m) false
  = [n,m:nat]nat_diagonal_ind ([n'3,m'4:nat](Lt m'4 n'3)->Eq%%bool (le n'3 m'4) false) ([m1:nat][H:Lt m1 zero]not_n_Lt_zero m1 H (Eq%%bool (le zero m1) false)) ([n1:nat][H:Lt zero (suc n1)]Eq_refl%%bool (le (suc n1) zero)) ([n1,m1:nat][H:(Lt m1 n1)->Eq%%bool (le n1 m1) false][H1:Lt (suc m1) (suc n1)]H (Lt_resp_pred m1 n1 H1)) n m];
[lt_true_imp_Lt : {n,m:nat}(Eq%%bool (lt n m) true)->Lt n m
  = [n,m:nat]nat_diagonal_ind ([n'3,m'4:nat](Eq%%bool (lt n'3 m'4) true)->Lt n'3 m'4) (nat_ind ([m'3:nat](Eq%%bool (lt zero m'3) true)->Lt zero m'3) ([H:Eq%%bool (lt zero zero) true]true_not_false (Eq_sym%%bool%%(lt zero zero)%%true H) (Lt zero zero)) ([n1:nat][H:(Eq%%bool (lt zero n1) true)->Lt zero n1][H1:Eq%%bool (lt zero (suc n1)) true]zero_Lt_suc_n n1)) ([n1:nat][H:Eq%%bool (lt (suc n1) zero) true]true_not_false (Eq_sym%%bool%%(lt (suc n1) zero)%%true H) (Lt (suc n1) zero)) ([n1,m1:nat][H:(Eq%%bool (lt n1 m1) true)->Lt n1 m1][H1:Eq%%bool (lt (suc n1) (suc m1)) true]Lt_resp_suc n1 m1 (H H1)) n m];
[lt_false_imp_Le : {n,m:nat}(Eq%%bool (lt n m) false)->Le m n
  = [n,m:nat]nat_diagonal_ind ([n'3,m'4:nat](Eq%%bool (lt n'3 m'4) false)->Le m'4 n'3) (nat_ind ([m'3:nat](Eq%%bool (lt zero m'3) false)->Le m'3 zero) ([H:Eq%%bool (lt zero zero) false]eq_imp_Le zero zero (Eq_refl%%nat zero)) ([n1:nat][H:(Eq%%bool (lt zero n1) false)->Le n1 zero][H1:Eq%%bool (lt zero (suc n1)) false]true_not_false H1 (Le (suc n1) zero))) ([n1:nat][H:Eq%%bool (lt (suc n1) zero) false]Le_zero_n (suc n1)) ([n1,m1:nat][H:(Eq%%bool (lt n1 m1) false)->Le m1 n1][H1:Eq%%bool (lt (suc n1) (suc m1)) false]Le_resp_suc m1 n1 (H H1)) n m];
[Lt_imp_lt_true : {n,m:nat}(Lt n m)->Eq%%bool (lt n m) true
  = nat_diagonal_ind ([n,m:nat](Lt n m)->Eq%%bool (lt n m) true) (nat_ind ([m:nat](Lt zero m)->Eq%%bool (lt zero m) true) ([H:Lt zero zero]not_n_Lt_zero zero H (Eq%%bool (lt zero zero) true)) ([n:nat][H:(Lt zero n)->Eq%%bool (lt zero n) true][H1:Lt zero (suc n)]Eq_refl%%bool (lt zero (suc n)))) ([n:nat][H:Lt (suc n) zero]not_n_Lt_zero (suc n) H (Eq%%bool (lt (suc n) zero) true)) ([n,m:nat][H:(Lt n m)->Eq%%bool (lt n m) true][H1:Lt (suc n) (suc m)]Eq_subst%%bool%%true%%(lt n m) (Eq_sym%%bool%%(lt n m)%%true (H|(Lt_resp_pred n m H1))) ([z:bool]Eq%%bool z true) (Eq_refl%%bool true))];
[Le_imp_lt_false : {n,m:nat}(Le n m)->Eq%%bool (lt m n) false
  = nat_diagonal_ind ([n,m:nat](Le n m)->Eq%%bool (lt m n) false) (nat_ind ([m:nat](Le zero m)->Eq%%bool (lt m zero) false) ([H:Le zero zero]Eq_refl%%bool (lt zero zero)) ([n:nat][H:(Le zero n)->Eq%%bool (lt n zero) false][H1:Le zero (suc n)]Eq_refl%%bool (lt (suc n) zero))) ([n:nat][H:Le (suc n) zero]not_Le_zero_n n H (Eq%%bool (lt zero (suc n)) false)) ([n,m:nat][H:(Le n m)->Eq%%bool (lt m n) false][H1:Le (suc n) (suc m)]Eq_subst%%bool%%false%%(lt m n) (Eq_sym%%bool%%(lt m n)%%false (H|(Le_resp_pred n m H1))) ([z:bool]Eq%%bool z false) (Eq_refl%%bool false))];
