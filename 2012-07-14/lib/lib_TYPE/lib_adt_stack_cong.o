Module lib_adt_stack_cong Import "lib_adt_basics" "lib_adt_stack";
[RespSTACKpush : {S:Str_STACK}Prop
  = [S:Str_STACK]{n,m:nat}{s,s':dom (Stack S)}(Eq%%nat n m)->(eq%%(Stack S) s s')->eq%%(Stack S) (push S n s) (push S m s')];
[RespSTACKpop : {S:Str_STACK}Prop
  = [S:Str_STACK]{s,s':dom (Stack S)}(eq%%(Stack S) s s')->eq%%(Stack S) (pop S s) (pop S s')];
[RespSTACKtop : {S:Str_STACK}Prop
  = [S:Str_STACK]{s,s':dom (Stack S)}(eq%%(Stack S) s s')->Eq%%nat (top S s) (top S s')];
[RespSTACK : {S:Str_STACK}Prop
  = [S:Str_STACK]and3 (RespSTACKpush S) (RespSTACKpop S) (RespSTACKtop S)];
[STACK_CONG : SPEC
  = Extend_AxOnly STACK RespSTACK];
[iterate : {A|Type}{f:A->A}{n:nat}{a:A}A
  = [A|Type][f:A->A][n:nat][a:A]nat_iter%%A a f n];
[pop_iterate : {S:Str STACK_CONG}{ax:Ax STACK_CONG S}{s:dom (Stack S)}{x:nat}eq%%(Stack S) (iterate%%(dom (Stack S)) (pop S) (suc x) s) (iterate%%(dom (Stack S)) (pop S) x (pop S s))
  = [S:Str STACK_CONG][ax:Ax STACK_CONG S][s:dom (Stack S)][x:nat]nat_ind ([x'5:nat]eq%%(Stack S) (iterate%%(dom (Stack S)) (pop S) (suc x'5) s) (iterate%%(dom (Stack S)) (pop S) x'5 (pop S s))) (and3_out1%%(refl%%(dom (Stack S)) (eq|(Stack S)))%%(sym%%(dom (Stack S)) (eq|(Stack S)))%%(trans%%(dom (Stack S)) (eq|(Stack S))) (and5_out1%%(EqSTACK S)%%(AxSTACK1 S)%%(AxSTACK2 S)%%(AxSTACK3 S)%%(AxSTACK4 S) (fst%%(Ax STACK S)%%(RespSTACK S) ax)) (iterate%%(dom (Stack S)) (pop S) (suc zero) s)) ([n:nat][H:eq%%(Stack S) (iterate%%(dom (Stack S)) (pop S) (suc n) s) (iterate%%(dom (Stack S)) (pop S) n (pop S s))]and3_out2%%(RespSTACKpush S)%%(RespSTACKpop S)%%(RespSTACKtop S) (snd%%(Ax STACK S)%%(RespSTACK S) ax) (nat_elim ([_:nat]dom (Stack S)) s ([_:nat]pop S) (suc n)) (nat_elim ([_:nat]dom (Stack S)) (pop S s) ([_:nat]pop S) n) H) x];
[pop_iterate_resp : {S:Str STACK_CONG}{ax:Ax STACK_CONG S}{s,s':dom (Stack S)}(eq%%(Stack S) s s')->{x:nat}eq%%(Stack S) (iterate%%(dom (Stack S)) (pop S) x s) (iterate%%(dom (Stack S)) (pop S) x s')
  = [S:Str STACK_CONG][ax:Ax STACK_CONG S][s,s':dom (Stack S)][H:eq%%(Stack S) s s'][x:nat]nat_ind ([x'7:nat]eq%%(Stack S) (iterate%%(dom (Stack S)) (pop S) x'7 s) (iterate%%(dom (Stack S)) (pop S) x'7 s')) H ([n:nat][H1:eq%%(Stack S) (iterate%%(dom (Stack S)) (pop S) n s) (iterate%%(dom (Stack S)) (pop S) n s')]and3_out2%%(RespSTACKpush S)%%(RespSTACKpop S)%%(RespSTACKtop S) (snd%%(Ax STACK S)%%(RespSTACK S) ax) (nat_elim ([_:nat]dom (Stack S)) s ([_:nat]pop S) n) (nat_elim ([_:nat]dom (Stack S)) s' ([_:nat]pop S) n) H1) x];
[pop_iterate_empty : {S:Str STACK_CONG}{ax:Ax STACK_CONG S}{i:nat}eq%%(Stack S) (iterate%%(dom (Stack S)) (pop S) i (empty S)) (empty S)
  = [S:Str STACK_CONG][ax:Ax STACK_CONG S][i:nat]nat_ind ([i'4:nat]eq%%(Stack S) (iterate%%(dom (Stack S)) (pop S) i'4 (empty S)) (empty S)) (and3_out1%%(refl%%(dom (Stack S)) (eq|(Stack S)))%%(sym%%(dom (Stack S)) (eq|(Stack S)))%%(trans%%(dom (Stack S)) (eq|(Stack S))) (and5_out1%%(EqSTACK S)%%(AxSTACK1 S)%%(AxSTACK2 S)%%(AxSTACK3 S)%%(AxSTACK4 S) (fst%%(Ax STACK S)%%(RespSTACK S) ax)) (iterate%%(dom (Stack S)) (pop S) zero (empty S))) ([n:nat][H:eq%%(Stack S) (iterate%%(dom (Stack S)) (pop S) n (empty S)) (empty S)]and3_out3%%(refl%%(dom (Stack S)) (eq|(Stack S)))%%(sym%%(dom (Stack S)) (eq|(Stack S)))%%(trans%%(dom (Stack S)) (eq|(Stack S))) (and5_out1%%(EqSTACK S)%%(AxSTACK1 S)%%(AxSTACK2 S)%%(AxSTACK3 S)%%(AxSTACK4 S) (fst%%(Ax STACK S)%%(RespSTACK S) ax))%%(iterate%%(dom (Stack S)) (pop S) (suc n) (empty S))%%(pop S (empty S))%%(empty S) (and3_out2%%(RespSTACKpush S)%%(RespSTACKpop S)%%(RespSTACKtop S) (snd%%(Ax STACK S)%%(RespSTACK S) ax) (nat_elim ([_:nat]dom (Stack S)) (empty S) ([_:nat]pop S) n) (empty S) H) (and5_out2%%(EqSTACK S)%%(AxSTACK1 S)%%(AxSTACK2 S)%%(AxSTACK3 S)%%(AxSTACK4 S) (fst%%(Ax STACK S)%%(RespSTACK S) ax))) i];
[pop_iterate_push : {S:Str STACK_CONG}{ax:Ax STACK_CONG S}{s:dom (Stack S)}{k,m:nat}eq%%(Stack S) (iterate%%(dom (Stack S)) (pop S) (suc k) (push S m s)) (iterate%%(dom (Stack S)) (pop S) k s)
  = [S:Str STACK_CONG][ax:Ax STACK_CONG S][s:dom (Stack S)][k,m:nat]nat_ind ([k'6:nat]eq%%(Stack S) (iterate%%(dom (Stack S)) (pop S) (suc k'6) (push S m s)) (iterate%%(dom (Stack S)) (pop S) k'6 s)) (and5_out4%%(EqSTACK S)%%(AxSTACK1 S)%%(AxSTACK2 S)%%(AxSTACK3 S)%%(AxSTACK4 S) (fst%%(Ax STACK S)%%(RespSTACK S) ax) m s) ([n:nat][H:eq%%(Stack S) (iterate%%(dom (Stack S)) (pop S) (suc n) (push S m s)) (iterate%%(dom (Stack S)) (pop S) n s)]and3_out2%%(RespSTACKpush S)%%(RespSTACKpop S)%%(RespSTACKtop S) (snd%%(Ax STACK S)%%(RespSTACK S) ax) (nat_elim ([_:nat]dom (Stack S)) (push S m s) ([_:nat]pop S) (suc n)) (nat_elim ([_:nat]dom (Stack S)) s ([_:nat]pop S) n) H) k];
