Module lib_finite Import "lib_nat";
$[fin : {n:nat}SET//f_zero f_suc];
$[f_zero : {n:nat}fin (suc n)];
$[f_suc : {n|nat}{x:fin n}fin (suc n)];
$[fin_elim : {C_fin:{n|nat}(fin n)->TYPE}({n:nat}C_fin%%(suc n) (f_zero n))->({n|nat}{x:fin n}{x_ih:C_fin%%n x}C_fin%%(suc n) (f_suc%%n x))->{n|nat}{z:fin n}C_fin%%n z];
Label (!fin!) fin;Label (!fin elim!) fin_elim;Label (!fin f_zero!) f_zero;Label (!fin f_suc!) f_suc;[[C_fin:{n|nat}(fin n)->TYPE][f_f_zero:{n1:nat}C_fin (f_zero n1)][f_f_suc:{n|nat}{x:fin n}(C_fin x)->C_fin (f_suc x)][n1:nat][n|nat][x:fin n]   fin_elim C_fin f_f_zero f_f_suc (f_zero n1)  ==>  f_f_zero n1|| fin_elim C_fin f_f_zero f_f_suc (f_suc x)  ==>  f_f_suc x (fin_elim C_fin f_f_zero f_f_suc x)]
;
[f_plus : {n,m|nat}(fin n)->fin (plus m n)
  = [n|nat]nat_elim ([m:nat](fin n)->fin (plus m n)) ([input:fin n]input) ([input:nat][x1_ih:(fin n)->fin (plus input n)][H:fin n]f_suc%%(nat_elim ([_:nat]nat) n ([_:nat]suc) input) (x1_ih H))];
[fin_elim'_lemma : {n:nat}{m:fin (suc n)}{P:(fin (suc n))->TYPE_minus2}(P (f_zero n))->({m'5:fin n}P (f_suc%%n m'5))->P m
  = [n:nat]fin_elim (nat_elim ([x:nat](fin x)->TYPE_minus1) ([_:fin zero]trueProp) ([x|nat][_:(fin x)->TYPE_minus1][n'4=suc x][m:fin n'4]{P:(fin n'4)->TYPE_minus2}(P (f_zero x))->({m'8:fin x}P (f_suc%%x m'8))->P m)) ([n1:nat][P:(fin (suc n1))->TYPE_minus2][H:P (f_zero n1)][H1:{m:fin n1}P (f_suc%%n1 m)]H) ([n1|nat][x:fin n1][x_ih:nat_elim ([x'4:nat](fin x'4)->TYPE_minus1) ([_:fin zero]trueProp) ([x'4|nat][_:(fin x'4)->TYPE_minus1][n'6=suc x'4][m:fin n'6]{P:(fin n'6)->TYPE_minus2}(P (f_zero x'4))->({m'10:fin x'4}P (f_suc%%x'4 m'10))->P m)%%n1 x][P:(fin (suc n1))->TYPE_minus2][H:P (f_zero n1)][H1:{m:fin n1}P (f_suc%%n1 m)]H1 x)%%(suc n)];
[fin_elim' : {n:nat}{P:(fin (suc n))->TYPE_minus2}{p:P (f_zero n)}{p':{m:fin n}P (f_suc%%n m)}{m:fin (suc n)}P m
  = [n:nat][P:(fin (suc n))->TYPE_minus2][p:P (f_zero n)][p':{m:fin n}P (f_suc%%n m)][m:fin (suc n)]fin_elim'_lemma n m P p p'];
[fin_rec : {C|TYPE}({n:nat}C)->({n|nat}{x:fin n}{x_ih:C}C)->{n|nat}{z:fin n}C
  = [C|TYPE]fin_elim ([n:nat][_:fin n]C)];
[fin_iter : {C|TYPE}{a:nat->C}{f:nat->C->C}{n|nat}{z:fin n}C
  = [C|TYPE][a:nat->C][f:nat->C->C]fin_rec%%C a ([n:nat][_:fin n]f n)];
[fin_ind : {P:{n:nat}(fin n)->Prop}({n:nat}P%%(suc n) (f_zero n))->({n|nat}{x:fin n}{x_ih:P%%n x}P%%(suc n) (f_suc%%n x))->{n|nat}{z:fin n}P%%n z
  = [P:{n:nat}(fin n)->Prop]fin_elim P];
[fin_rec' : {n:nat}{C|TYPE_minus2}{p:C}{p':{m:fin n}C}{m:fin (suc n)}C
  = [n:nat][C|TYPE_minus2]fin_elim' n ([_:fin (suc n)]C)];
[fin_ind' : {n:nat}{P:(fin (suc n))->Prop}{p:P (f_zero n)}{p':{m:fin n}P (f_suc%%n m)}{m:fin (suc n)}P m
  = [n:nat][P:(fin (suc n))->Prop]fin_elim' n P];
[peano2_fin : {n:nat}{x:fin n}not (Eq%%(fin (suc n)) (f_suc%%n x) (f_zero n))
  = [n:nat][x:fin n][H:Eq%%(fin (suc n)) (f_suc%%n x) (f_zero n)]Eq_subst%%(fin (suc n))%%(f_suc%%n x)%%(f_zero n) H (fin_rec' n%%Prop absurd ([_:fin n]trueProp)) ([P:Prop][H1:P]H1)];
[peano3_fin : {n:nat}{x,y:fin n}(Eq%%(fin (suc n)) (f_suc%%n x) (f_suc%%n y))->Eq%%(fin n) x y
  = [n:nat][x,y:fin n][H:Eq%%(fin (suc n)) (f_suc%%n x) (f_suc%%n y)]Eq_subst%%(fin (suc n))%%(f_suc%%n x)%%(f_suc%%n y) H (fin_rec' n%%Prop absurd ([x':fin n]Eq%%(fin n) x x')) (Eq_refl%%(fin n) x)];
[inj_void : {n:nat}{x:fin (suc n)}(not (Eq%%(fin (suc n)) x (f_zero n)))->Ex%%(fin n) ([x':fin n]Eq%%(fin (suc n)) x (f_suc%%n x'))
  = [n:nat]fin_elim' n ([x:fin (suc n)](not (Eq%%(fin (suc n)) x (f_zero n)))->Ex%%(fin n) ([x':fin n]Eq%%(fin (suc n)) x (f_suc%%n x'))) ([H:not (Eq%%(fin (suc n)) (f_zero n) (f_zero n))]H (Eq_refl%%(fin (suc n)) (f_zero n)) (Ex%%(fin n) ([x':fin n]Eq%%(fin (suc n)) (f_zero n) (f_suc%%n x')))) ([m:fin n][H:not (Eq%%(fin (suc n)) (f_suc%%n m) (f_zero n))]ExIntro%%(fin n) m ([x':fin n]Eq%%(fin (suc n)) (f_suc%%n m) (f_suc%%n x')) (Eq_refl%%(fin (suc n)) (f_suc%%n m)))];
[finite_is_zero_or_succ : {n:nat}{x:fin (suc n)}(Eq%%(fin (suc n)) x (f_zero n) \/ Ex%%(fin n) ([x':fin n]Eq%%(fin (suc n)) x (f_suc%%n x')))
  = [n:nat]fin_elim' n ([x:fin (suc n)](Eq%%(fin (suc n)) x (f_zero n) \/ Ex%%(fin n) ([x':fin n]Eq%%(fin (suc n)) x (f_suc%%n x')))) (inl%%(Eq%%(fin (suc n)) (f_zero n) (f_zero n))%%(Ex%%(fin n) ([x':fin n]Eq%%(fin (suc n)) (f_zero n) (f_suc%%n x'))) (Eq_refl%%(fin (suc n)) (f_zero n))) ([m:fin n]inr%%(Eq%%(fin (suc n)) (f_suc%%n m) (f_zero n))%%(Ex%%(fin n) ([x':fin n]Eq%%(fin (suc n)) (f_suc%%n m) (f_suc%%n x'))) (ExIntro%%(fin n) m ([x':fin n]Eq%%(fin (suc n)) (f_suc%%n m) (f_suc%%n x')) (Eq_refl%%(fin (suc n)) (f_suc%%n m))))];
[zero_set_is_empty : {x:fin zero}absurd
  = [x:fin zero]fin_elim ([n|nat][v:fin n](Eq%%nat n zero)->absurd) ([n:nat][H:Eq%%nat (suc n) zero]zero_not_suc n (Eq_sym%%nat%%(suc n)%%zero H)) ([n|nat][x1:fin n][x_ih:(Eq%%nat n zero)->absurd][H:Eq%%nat (suc n) zero]zero_not_suc n (Eq_sym%%nat%%(suc n)%%zero H))%%zero x (Eq_refl%%nat zero)];
[fin_zero_lemma : {n|nat}{x:fin n}nat_elim ([x'3:nat](fin x'3)->TYPE_minus1) ([x'3:fin zero]{P:(fin zero)->TYPE_minus2}P x'3) ([n'3:nat][_:(fin n'3)->TYPE_minus1][_:fin (suc n'3)]{t:TYPE_minus2}t->t) n x
  = fin_elim (nat_elim ([x:nat](fin x)->TYPE_minus1) ([x:fin zero]{P:(fin zero)->TYPE_minus2}P x) ([n:nat][_:(fin n)->TYPE_minus1][_:fin (suc n)]{t:TYPE_minus2}t->t)) ([n:nat][t:TYPE_minus2][H:t]H) ([n|nat][x:fin n][x_ih:nat_elim ([x'3:nat](fin x'3)->TYPE_minus1) ([x'3:fin zero]{P:(fin zero)->TYPE_minus2}P x'3) ([n'3:nat][_:(fin n'3)->TYPE_minus1][_:fin (suc n'3)]{t:TYPE_minus2}t->t)%%n x][t:TYPE_minus2][H:t]H)];
[fin_elim_zero : {P:(fin zero)->TYPE_minus2}{x:fin zero}P x
  = [P:(fin zero)->TYPE_minus2][x:fin zero]fin_zero_lemma%%zero x P];
[f_plus_assoc : {n,o,m|nat}(fin (plus m (plus n o)))->fin (plus (plus m n) o)
  = [n,o|nat]nat_elim ([m:nat](fin (plus m (plus n o)))->fin (plus (plus m n) o)) (Id%%(fin (plus zero (plus n o)))) ([x1:nat][x1_ih:(fin (plus x1 (plus n o)))->fin (plus (plus x1 n) o)]fin_elim' (nat_elim ([_:nat]nat) (plus n o) ([_:nat]suc) x1) ([_:fin (plus (suc x1) (plus n o))]fin (plus (plus (suc x1) n) o)) (f_zero (nat_elim ([_:nat]nat) o ([_:nat]suc) (nat_elim ([_:nat]nat) n ([_:nat]suc) x1))) ([m:fin (nat_elim ([_:nat]nat) (plus n o) ([_:nat]suc) x1)]f_suc%%(nat_elim ([_:nat]nat) o ([_:nat]suc) (nat_elim ([_:nat]nat) n ([_:nat]suc) x1)) (x1_ih m)))];
[fin_to_nat : {n|nat}{x:fin n}nat
  = fin_elim ([n|nat][x:fin n]nat) ([n:nat]zero) ([n|nat][x:fin n][x_ih:nat]suc x_ih)];
[fin_to_nat_resp_suc : {n|nat}{x:fin n}Eq%%nat (suc (fin_to_nat%%n x)) (fin_to_nat%%(suc n) (f_suc%%n x))
  = fin_ind ([n|nat][x:fin n]Eq%%nat (suc (fin_to_nat%%n x)) (fin_to_nat%%(suc n) (f_suc%%n x))) ([n:nat]Eq_refl%%nat (suc (fin_to_nat%%(suc n) (f_zero n)))) ([n|nat][x:fin n][x_ih:Eq%%nat (suc (fin_to_nat%%n x)) (fin_to_nat%%(suc n) (f_suc%%n x))]Eq_resp%%nat%%nat suc%%(fin_to_nat%%(suc n) (f_suc%%n x))%%(fin_elim ([n'4|nat][x'5:fin n'4]nat) ([n'4:nat]zero) ([n'4|nat][x'5:fin n'4][x_ih'6:nat]suc x_ih'6)%%(suc n) (f_suc%%n x)) x_ih)];
