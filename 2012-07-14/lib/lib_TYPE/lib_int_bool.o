Module lib_int_bool Import "lib_int_Prop_rels" "lib_nat_rels";
[int_eq_zero : int.1->bool
  = [x:int.1]nat_eq x.1 x.2];
[int_Le_bool : int.1->int.1->bool
  = [x,y:int.1]le (plus x.1 y.2) (plus y.1 x.2)];
[int_eq_bool : int.1->int.1->bool
  = [x,y:int.1]nat_eq (plus x.1 y.2) (plus y.1 x.2)];
[int_Lt_bool : int.1->int.1->bool
  = [x,y:int.1]lt (plus x.1 y.2) (plus y.1 x.2)];
[bool_pos : int.1->bool
  = [x:int.1]le x.2 x.1];
[bool_pos_true_imp_pos : {x:int.1}(Eq%%bool (bool_pos x) true)->Le_zed zero_zed x
  = [x:int.1][H:Eq%%bool (bool_pos x) true]le_true_imp_Le (plus zero_zed.1 x.2) (plus zero_zed.2 x.1) H];
[bool_pos_false_imp_pos : {x:int.1}(Eq%%bool (bool_pos x) false)->Lt_zed x zero_zed
  = [x:int.1][H:Eq%%bool (bool_pos x) false]le_false_imp_Lt (plus x.2 zero_zed.1) (plus x.1 zero_zed.2) (Eq_subst%%nat%%x.1%%(plus x.1 zero) (Eq_sym%%nat%%(plus x.1 zero)%%x.1 (plus_zero x.1)) ([z:nat]Eq%%bool (le (plus x.2 zero_zed.1) z) false) (Eq_subst%%nat%%x.2%%(plus x.2 zero) (Eq_sym%%nat%%(plus x.2 zero)%%x.2 (plus_zero x.2)) ([z:nat]Eq%%bool (le z x.1) false) H))];
[pos_imp_bool_pos_true : {x:int.1}(Le_zed zero_zed x)->Eq%%bool (bool_pos x) true
  = [x:int.1][H:Le_zed zero_zed x]Le_imp_le_true x.2 x.1 H];
[pos_imp_bool_pos_false : {x:int.1}(Lt_zed x zero_zed)->Eq%%bool (bool_pos x) false
  = [x:int.1][H:Lt_zed x zero_zed]Lt_imp_le_false x.2 x.1 (Eq_subst%%nat%%(plus x.1 zero)%%x.1 (Eq_sym%%nat%%x.1%%(plus x.1 zero) (Eq_sym%%nat%%(plus x.1 zero)%%x.1 (plus_zero x.1))) ([z:nat]Lt z x.2) (Eq_subst%%nat%%(plus x.2 zero)%%x.2 (Eq_sym%%nat%%x.2%%(plus x.2 zero) (Eq_sym%%nat%%(plus x.2 zero)%%x.2 (plus_zero x.2))) ([z:nat]Lt (plus x.1 zero) z) H))];
