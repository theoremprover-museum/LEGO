Module lib_nat_suc_thms Import "lib_nat";
[Eq_resp_suc : {m,n|nat}(Eq%%nat m n)->Eq%%nat (suc m) (suc n)
  = [m,n|nat][p:Eq%%nat m n]Eq_resp%%nat%%nat suc%%m%%n p];
[Eq_resp_pred : {m,n|nat}(Eq%%nat m n)->Eq%%nat (pred m) (pred n)
  = [m,n|nat][p:Eq%%nat m n]Eq_resp%%nat%%nat pred%%m%%n p];
[suc_injective : {m,n|nat}(Eq%%nat (suc m) (suc n))->Eq%%nat m n
  = [m,n|nat][p:Eq%%nat (suc m) (suc n)]Eq_resp_pred%%(suc m)%%(suc n) p];
[n_not_suc_n : {n:nat}not (Eq%%nat n (suc n))
  = nat_ind ([n:nat]not (Eq%%nat n (suc n))) (zero_not_suc zero) ([x:nat][ih:not (Eq%%nat x (suc x))][hyp:Eq%%nat (suc x) (suc (suc x))]ih (suc_injective%%x%%(suc x) hyp))];
[suc_pred : {n|nat}(not (Eq%%nat n zero))->Eq%%nat n (suc (pred n))
  = nat_ind ([n:nat](not (Eq%%nat n zero))->Eq%%nat n (suc (pred n))) ([contradiction:not (Eq%%nat zero zero)]contradiction (Eq_refl%%nat zero) (Eq%%nat zero (suc (pred zero)))) ([n:nat][H:(not (Eq%%nat n zero))->Eq%%nat n (suc (pred n))][H1:not (Eq%%nat (suc n) zero)]Eq_refl%%nat (suc n))];
