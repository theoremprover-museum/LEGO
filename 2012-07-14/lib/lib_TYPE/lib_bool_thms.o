Module lib_bool_thms Import "lib_bool_funs";
[is_true_not_is_false : {b:bool}iff (is_true b) (not (is_false b))
  = [b:bool]pair%%((is_true b)->not (is_false b))%%((not (is_false b))->is_true b) ([h:is_true b]Eq_subst%%bool%%true%%b (Eq_sym%%bool%%b%%true h) ([z:bool]not (is_false z)) true_not_false) ([h:not (is_false b)]true_or_false b%%(is_true b) ([H:is_true b]H) ([H:is_false b]h H (is_true b)))];
[bool_contrapos : {a,b|bool}((is_true a)->is_true b)->(is_false b)->is_false a
  = bool_double_elim ([a,b|bool]((Eq%%bool a true)->Eq%%bool b true)->(Eq%%bool b false)->Eq%%bool a false) ([H:(Eq%%bool true true)->Eq%%bool true true][H1:Eq%%bool true false]H1) ([h:(Eq%%bool true true)->Eq%%bool false true][j:Eq%%bool false false]Eq_sym%%bool%%false%%true (h (Eq_refl%%bool true))) ([H:(Eq%%bool false true)->Eq%%bool true true][H1:Eq%%bool true false]Eq_refl%%bool false) ([H:(Eq%%bool false true)->Eq%%bool false true][H1:Eq%%bool false false]Eq_refl%%bool false)];
[bool_contradiction : {b|bool}(is_true b)->(is_false b)->absurd
  = [b|bool][H:is_true b][H1:is_false b]true_not_false (Eq_subst%%bool%%b%%true (Eq_sym%%bool%%true%%b (Eq_sym%%bool%%b%%true H)) ([z:bool]Eq%%bool z false) (Eq_subst%%bool%%b%%false (Eq_sym%%bool%%false%%b (Eq_sym%%bool%%b%%false H1)) ([z:bool]Eq%%bool b z) (Eq_refl%%bool b)))];
[if_absorbs : {b:bool}{t|SET}{x:t}Eq%%t (if%%t b x x) x
  = [b:bool][t|SET][x:t]bool_elim ([b'4:bool]Eq%%t (if%%t b'4 x x) x) (Eq_refl%%t (if%%t true x x)) (Eq_refl%%t (if%%t false x x)) b];
[if_character : {t|SET}{x,y,z|t}{b|bool}(Eq%%t (if%%t b x y) z)->(Eq%%t x z \/ Eq%%t y z)
  = [t|SET][x,y,z|t]bool_elim ([b'|bool](Eq%%t (if%%t b' x y) z)->(Eq%%t x z \/ Eq%%t y z)) ([H:Eq%%t (if%%t true x y) z]inl%%(Eq%%t x z)%%(Eq%%t y z) H) ([H:Eq%%t (if%%t false x y) z]inr%%(Eq%%t x z)%%(Eq%%t y z) H)];
[Eq_resp_if : {t|SET}{x,y,x',y'|t}(Eq%%t x x')->(Eq%%t y y')->{b:bool}Eq%%t (if%%t b x y) (if%%t b x' y')
  = [t|SET][x,y,x',y'|t][H:Eq%%t x x'][H1:Eq%%t y y'][b:bool]true_or_false b%%(Eq%%t (if%%t b x y) (if%%t b x' y')) ([trueb:is_true b]Eq_subst%%bool%%true%%b (Eq_sym%%bool%%b%%true trueb) ([z:bool]Eq%%t (if%%t z x y) (if%%t z x' y')) H) ([falseb:is_false b]Eq_subst%%bool%%false%%b (Eq_sym%%bool%%b%%false falseb) ([z:bool]Eq%%t (if%%t z x y) (if%%t z x' y')) H1)];
[if_inside : {s,t|SET}{f:s->t}{x,y:s}{b:bool}Eq%%t (if%%t b (f x) (f y)) (f (if%%s b x y))
  = [s,t|SET][f:s->t][x,y:s][b:bool]true_or_false b%%(Eq%%t (if%%t b (f x) (f y)) (f (if%%s b x y))) ([trueb:is_true b]Eq_subst%%bool%%true%%b (Eq_sym%%bool%%b%%true trueb) ([z:bool]Eq%%t (if%%t z (f x) (f y)) (f (if%%s z x y))) (Eq_refl%%t (if%%t true (f x) (f y)))) ([falseb:is_false b]Eq_subst%%bool%%false%%b (Eq_sym%%bool%%b%%false falseb) ([z:bool]Eq%%t (if%%t z (f x) (f y)) (f (if%%s z x y))) (Eq_refl%%t (if%%t false (f x) (f y))))];
[middle_four_if : {A|SET}{a,b,c,d:A}{x,y:bool}Eq%%A (if%%A x (if%%A y a b) (if%%A y c d)) (if%%A y (if%%A x a c) (if%%A x b d))
  = [A|SET][a,b,c,d:A][x,y:bool]true_or_false x%%(Eq%%A (if%%A x (if%%A y a b) (if%%A y c d)) (if%%A y (if%%A x a c) (if%%A x b d))) ([ttx:is_true x]Eq_subst%%bool%%true%%x (Eq_sym%%bool%%x%%true ttx) ([z:bool]Eq%%A (if%%A z (if%%A y a b) (if%%A y c d)) (if%%A y (if%%A z a c) (if%%A z b d))) (Eq_refl%%A (if%%A true (if%%A y a b) (if%%A y c d)))) ([ffx:is_false x]Eq_subst%%bool%%false%%x (Eq_sym%%bool%%x%%false ffx) ([z:bool]Eq%%A (if%%A z (if%%A y a b) (if%%A y c d)) (if%%A y (if%%A z a c) (if%%A z b d))) (Eq_refl%%A (if%%A false (if%%A y a b) (if%%A y c d))))];
[reduce_if_left : {A|SET}{a,b,c:A}{x:bool}Eq%%A (if%%A x (if%%A x a b) c) (if%%A x a c)
  = [A|SET][a,b,c:A][x:bool]true_or_false x%%(Eq%%A (if%%A x (if%%A x a b) c) (if%%A x a c)) ([ttx:is_true x]Eq_subst%%bool%%true%%x (Eq_sym%%bool%%x%%true ttx) ([z:bool]Eq%%A (if%%A z (if%%A z a b) c) (if%%A z a c)) (Eq_refl%%A (if%%A true (if%%A true a b) c))) ([ffx:is_false x]Eq_subst%%bool%%false%%x (Eq_sym%%bool%%x%%false ffx) ([z:bool]Eq%%A (if%%A z (if%%A z a b) c) (if%%A z a c)) (Eq_refl%%A (if%%A false (if%%A false a b) c)))];
[reduce_if_right : {A|SET}{a,b,c:A}{x:bool}Eq%%A (if%%A x a (if%%A x b c)) (if%%A x a c)
  = [A|SET][a,b,c:A][x:bool]true_or_false x%%(Eq%%A (if%%A x a (if%%A x b c)) (if%%A x a c)) ([ttx:is_true x]Eq_subst%%bool%%true%%x (Eq_sym%%bool%%x%%true ttx) ([z:bool]Eq%%A (if%%A z a (if%%A z b c)) (if%%A z a c)) (Eq_refl%%A (if%%A true a (if%%A true b c)))) ([ffx:is_false x]Eq_subst%%bool%%false%%x (Eq_sym%%bool%%x%%false ffx) ([z:bool]Eq%%A (if%%A z a (if%%A z b c)) (if%%A z a c)) (Eq_refl%%A (if%%A false a (if%%A false b c))))];
[if_prop : {C|SET}{b:bool}((Eq%%bool b true)->C)->((Eq%%bool b false)->C)->C
  = [C|SET][b:bool]bool_elim ([b'3:bool]((Eq%%bool b'3 true)->C)->((Eq%%bool b'3 false)->C)->C) ([H:(Eq%%bool true true)->C][H1:(Eq%%bool true false)->C]H (Eq_refl%%bool true)) ([H:(Eq%%bool false true)->C][H1:(Eq%%bool false false)->C]H1 (Eq_refl%%bool false)) b];
[andalso_character : {a,b:bool}iff (is_true (andalso a b)) (is_true a /\ is_true b)
  = [a,b:bool]pair%%((is_true (andalso a b))->(is_true a /\ is_true b))%%((is_true a /\ is_true b)->is_true (andalso a b)) ([h:is_true (andalso a b)]true_or_false a%%(is_true a /\ is_true b) ([atrue:is_true a]true_or_false b%%(is_true a /\ is_true b) ([btrue:is_true b]pair%%(is_true a)%%(is_true b) atrue btrue) ([bfalse:is_false b]true_not_false (Eq_subst%%bool%%(andalso a b)%%true (Eq_sym%%bool%%true%%(andalso a b) (Eq_sym%%bool%%(andalso a b)%%true h)) ([z:bool]Eq%%bool z false) (Eq_subst%%bool%%true%%a (Eq_sym%%bool%%a%%true atrue) ([z:bool]Eq%%bool (andalso z b) false) (Eq_subst%%bool%%false%%b (Eq_sym%%bool%%b%%false bfalse) ([z:bool]Eq%%bool z false) (Eq_refl%%bool false)))) (is_true a /\ is_true b))) ([afalse:is_false a]true_not_false (Eq_subst%%bool%%(andalso a b)%%true (Eq_sym%%bool%%true%%(andalso a b) (Eq_sym%%bool%%(andalso a b)%%true h)) ([z:bool]Eq%%bool z false) (Eq_subst%%bool%%false%%a (Eq_sym%%bool%%a%%false afalse) ([z:bool]Eq%%bool (andalso z b) false) (Eq_refl%%bool (andalso false b)))) (is_true a /\ is_true b))) ([atruebtrue:is_true a /\ is_true b]Eq_subst%%bool%%true%%a (Eq_sym%%bool%%a%%true (fst%%(is_true a)%%(is_true b) atruebtrue)) ([z:bool]is_true (andalso z b)) (Eq_subst%%bool%%true%%b (Eq_sym%%bool%%b%%true (snd%%(is_true a)%%(is_true b) atruebtrue)) ([z:bool]is_true z) (Eq_refl%%bool true)))];
[andalso_absorbs : {b:bool}Eq%%bool (andalso b b) b
  = [b:bool]true_or_false b%%(Eq%%bool (andalso b b) b) ([trueb:is_true b]Eq_subst%%bool%%true%%b (Eq_sym%%bool%%b%%true trueb) ([z:bool]Eq%%bool (andalso z z) z) (Eq_refl%%bool (andalso true true))) ([falseb:is_false b]Eq_subst%%bool%%false%%b (Eq_sym%%bool%%b%%false falseb) ([z:bool]Eq%%bool (andalso z z) z) (Eq_refl%%bool (andalso false false)))];
[andalso_commutes : {b,c:bool}Eq%%bool (andalso b c) (andalso c b)
  = bool_double_elim ([b,c:bool]Eq%%bool (andalso b c) (andalso c b)) (Eq_refl%%bool (andalso true true)) (Eq_refl%%bool (andalso true false)) (Eq_refl%%bool (andalso false true)) (Eq_refl%%bool (andalso false false))];
[andalso_false : {b:bool}Eq%%bool (andalso b false) false
  = bool_ind ([b:bool]Eq%%bool (andalso b false) false) (Eq_refl%%bool (andalso true false)) (Eq_refl%%bool (andalso false false))];
[andalso_true : {b:bool}Eq%%bool (andalso b true) b
  = bool_ind ([b:bool]Eq%%bool (andalso b true) b) (Eq_refl%%bool (andalso true true)) (Eq_refl%%bool (andalso false true))];
[inv_character : {b:bool}iff (is_true (inv b)) (not (is_true b))
  = [b:bool]pair%%((is_true (inv b))->not (is_true b))%%((not (is_true b))->is_true (inv b)) ([h:is_true (inv b)][g:is_true b]true_not_false (Eq_subst%%bool%%(inv b)%%true (Eq_sym%%bool%%true%%(inv b) (Eq_sym%%bool%%(inv b)%%true h)) ([z:bool]Eq%%bool z false) (Eq_subst%%bool%%true%%b (Eq_sym%%bool%%b%%true g) ([z:bool]Eq%%bool (inv z) false) (Eq_refl%%bool (inv true))))) ([notbtrue:not (is_true b)]true_or_false b%%(is_true (inv b)) ([H:is_true b]notbtrue H (is_true (inv b))) ([bfalse:is_false b]Eq_subst%%bool%%false%%b (Eq_sym%%bool%%b%%false bfalse) ([z:bool]is_true (inv z)) (Eq_refl%%bool (inv false))))];
[inv_character' : {a,b:bool}iff (Eq%%bool (inv a) b) (Eq%%bool a (inv b))
  = bool_elim ([a:bool]{b:bool}iff (Eq%%bool (inv a) b) (Eq%%bool a (inv b))) ([b:bool]pair%%((Eq%%bool (inv true) b)->Eq%%bool true (inv b))%%((Eq%%bool true (inv b))->Eq%%bool (inv true) b) ([H:Eq%%bool (inv true) b]Eq_subst%%bool%%(inv true)%%b (Eq_sym%%bool%%b%%(inv true) (Eq_sym%%bool%%(inv true)%%b H)) ([z:bool]Eq%%bool true (inv z)) (Eq_refl%%bool true)) (bool_elim ([b'2:bool](Eq%%bool true (inv b'2))->Eq%%bool (inv true) b'2) (Eq_sym%%bool%%true%%(inv true)) ([H:Eq%%bool true (inv false)]Eq_refl%%bool (inv true)) b)) ([b:bool]pair%%((Eq%%bool (inv false) b)->Eq%%bool false (inv b))%%((Eq%%bool false (inv b))->Eq%%bool (inv false) b) ([H:Eq%%bool (inv false) b]Eq_subst%%bool%%(inv false)%%b (Eq_sym%%bool%%b%%(inv false) (Eq_sym%%bool%%(inv false)%%b H)) ([z:bool]Eq%%bool false (inv z)) (Eq_refl%%bool false)) (bool_elim ([b'2:bool](Eq%%bool false (inv b'2))->Eq%%bool (inv false) b'2) ([H:Eq%%bool false (inv true)]Eq_refl%%bool (inv false)) (Eq_sym%%bool%%false%%(inv false)) b))];
[inv_idemp : {b:bool}Eq%%bool (inv (inv b)) b
  = [b:bool]bool_ind ([b'2:bool]Eq%%bool (inv (inv b'2)) b'2) (Eq_refl%%bool (inv (inv true))) (Eq_refl%%bool (inv (inv false))) b];
[inv_is_true_is_false : {n:bool}iff (is_true (inv n)) (is_false n)
  = bool_ind ([n:bool]iff (is_true (inv n)) (is_false n)) (pair%%((is_true (inv true))->is_false true)%%((is_false true)->is_true (inv true)) (Eq_sym%%bool%%(inv true)%%true) (Eq_sym%%bool%%true%%false)) (pair%%((is_true (inv false))->is_false false)%%((is_false false)->is_true (inv false)) ([H:is_true (inv false)]Eq_refl%%bool false) ([H:is_false false]Eq_refl%%bool (inv false)))];
[inv_is_false_is_true : {n:bool}iff (is_false (inv n)) (is_true n)
  = bool_ind ([n:bool]iff (is_false (inv n)) (is_true n)) (pair%%((is_false (inv true))->is_true true)%%((is_true true)->is_false (inv true)) ([H:is_false (inv true)]Eq_refl%%bool true) ([H:is_true true]Eq_refl%%bool (inv true))) (pair%%((is_false (inv false))->is_true false)%%((is_true false)->is_false (inv false)) ([H:is_false (inv false)]Eq_sym%%bool%%true%%false H) ([H:is_true false]Eq_sym%%bool%%false%%(inv false) H))];
[orelse_character : {a,b:bool}iff (is_true (orelse a b)) (is_true a \/ is_true b)
  = [a,b:bool]pair%%((is_true (orelse a b))->(is_true a \/ is_true b))%%((is_true a \/ is_true b)->is_true (orelse a b)) ([orelseab:is_true (orelse a b)]true_or_false a%%(is_true a \/ is_true b) ([atrue:is_true a]inl%%(is_true a)%%(is_true b) atrue) ([afalse:is_false a]inr%%(is_true a)%%(is_true b) (Eq_subst%%bool%%(orelse a b)%%true (Eq_sym%%bool%%true%%(orelse a b) (Eq_sym%%bool%%(orelse a b)%%true orelseab)) ([z:bool]Eq%%bool b z) (Eq_subst%%bool%%false%%a (Eq_sym%%bool%%a%%false afalse) ([z:bool]Eq%%bool b (orelse z b)) (Eq_refl%%bool b))))) ([orab:is_true a \/ is_true b]orab%%(is_true (orelse a b)) ([atrue:is_true a]Eq_subst%%bool%%true%%a (Eq_sym%%bool%%a%%true atrue) ([z:bool]Eq%%bool (orelse z b) true) (Eq_refl%%bool (orelse true b))) ([btrue:is_true b]Eq_subst%%bool%%true%%b (Eq_sym%%bool%%b%%true btrue) ([z:bool]Eq%%bool (orelse a z) true) (true_or_false a%%(Eq%%bool (orelse a true) true) ([atrue:is_true a]Eq_subst%%bool%%true%%a (Eq_sym%%bool%%a%%true atrue) ([z:bool]Eq%%bool (orelse z true) true) (Eq_refl%%bool (orelse true true))) ([afalse:is_false a]Eq_subst%%bool%%false%%a (Eq_sym%%bool%%a%%false afalse) ([z:bool]Eq%%bool (orelse z true) true) (Eq_refl%%bool (orelse false true))))))];
[orelse_absorbs : {b:bool}Eq%%bool (orelse b b) b
  = [b:bool]true_or_false b%%(Eq%%bool (orelse b b) b) ([trueb:is_true b]Eq_subst%%bool%%true%%b (Eq_sym%%bool%%b%%true trueb) ([z:bool]Eq%%bool (orelse z z) z) (Eq_refl%%bool (orelse true true))) ([falseb:is_false b]Eq_subst%%bool%%false%%b (Eq_sym%%bool%%b%%false falseb) ([z:bool]Eq%%bool (orelse z z) z) (Eq_refl%%bool (orelse false false)))];
[orelse_assoc : {a,b,c:bool}Eq%%bool (orelse (orelse a b) c) (orelse a (orelse b c))
  = [a,b,c:bool]true_or_false a%%(Eq%%bool (orelse (orelse a b) c) (orelse a (orelse b c))) ([truea:is_true a]Eq_subst%%bool%%true%%a (Eq_sym%%bool%%a%%true truea) ([z:bool]Eq%%bool (orelse (orelse z b) c) (orelse z (orelse b c))) (Eq_refl%%bool (orelse (orelse true b) c))) ([falsea:is_false a]Eq_subst%%bool%%false%%a (Eq_sym%%bool%%a%%false falsea) ([z:bool]Eq%%bool (orelse (orelse z b) c) (orelse z (orelse b c))) (Eq_refl%%bool (orelse (orelse false b) c)))];
[orelse_commutes : {a,b:bool}Eq%%bool (orelse a b) (orelse b a)
  = [a,b:bool]true_or_false a%%(Eq%%bool (orelse a b) (orelse b a)) ([ah:is_true a]Eq_subst%%bool%%true%%a (Eq_sym%%bool%%a%%true ah) ([z:bool]Eq%%bool (orelse z b) (orelse b z)) (true_or_false b%%(Eq%%bool (orelse true b) (orelse b true)) ([bh:is_true b]Eq_subst%%bool%%true%%b (Eq_sym%%bool%%b%%true bh) ([z:bool]Eq%%bool (orelse true z) (orelse z true)) (Eq_refl%%bool (orelse true true))) ([bh:is_false b]Eq_subst%%bool%%false%%b (Eq_sym%%bool%%b%%false bh) ([z:bool]Eq%%bool (orelse true z) (orelse z true)) (Eq_refl%%bool (orelse true false))))) ([ah:is_false a]Eq_subst%%bool%%false%%a (Eq_sym%%bool%%a%%false ah) ([z:bool]Eq%%bool (orelse z b) (orelse b z)) (true_or_false b%%(Eq%%bool (orelse false b) (orelse b false)) ([bh:is_true b]Eq_subst%%bool%%true%%b (Eq_sym%%bool%%b%%true bh) ([z:bool]Eq%%bool z (orelse z false)) (Eq_refl%%bool true)) ([bh:is_false b]Eq_subst%%bool%%false%%b (Eq_sym%%bool%%b%%false bh) ([z:bool]Eq%%bool z (orelse z false)) (Eq_refl%%bool false))))];
[orelse_false : {b:bool}Eq%%bool (orelse b false) b
  = bool_ind ([b:bool]Eq%%bool (orelse b false) b) (Eq_refl%%bool (orelse true false)) (Eq_refl%%bool (orelse false false))];
[orelse_true : {b:bool}Eq%%bool (orelse b true) true
  = bool_ind ([b:bool]Eq%%bool (orelse b true) true) (Eq_refl%%bool (orelse true true)) (Eq_refl%%bool (orelse false true))];
[deMorgan : {a,b:bool}iff (is_false (orelse a b)) (is_false a /\ is_false b)
  = [a,b:bool]pair%%((is_false (orelse a b))->(is_false a /\ is_false b))%%((is_false a /\ is_false b)->is_false (orelse a b)) ([hyp:is_false (orelse a b)]pair%%(is_false a)%%(is_false b) (true_or_false a%%(is_false a) ([truea:is_true a]true_not_false (Eq_subst%%bool%%(orelse a b)%%false (Eq_sym%%bool%%false%%(orelse a b) (Eq_sym%%bool%%(orelse a b)%%false hyp)) ([z:bool]Eq%%bool true z) (Eq_subst%%bool%%true%%a (Eq_sym%%bool%%a%%true truea) ([z:bool]Eq%%bool true (orelse z b)) (Eq_refl%%bool true))) (is_false a)) ([H:is_false a]H)) (true_or_false b%%(is_false b) ([trueb:is_true b]true_not_false (Eq_subst%%bool%%(orelse a b)%%false (Eq_sym%%bool%%false%%(orelse a b) (Eq_sym%%bool%%(orelse a b)%%false hyp)) ([z:bool]Eq%%bool true z) (Eq_subst%%bool%%(orelse b a)%%(orelse a b) (Eq_sym%%bool%%(orelse a b)%%(orelse b a) (orelse_commutes a b)) ([z:bool]Eq%%bool true z) (Eq_subst%%bool%%true%%b (Eq_sym%%bool%%b%%true trueb) ([z:bool]Eq%%bool true (orelse z a)) (Eq_refl%%bool true)))) (is_false b)) ([H:is_false b]H))) ([g:is_false a /\ is_false b]Eq_subst%%bool%%false%%a (Eq_sym%%bool%%a%%false (fst%%(is_false a)%%(is_false b) g)) ([z:bool]is_false (orelse z b)) (Eq_subst%%bool%%false%%b (Eq_sym%%bool%%b%%false (snd%%(is_false a)%%(is_false b) g)) ([z:bool]is_false z) (Eq_refl%%bool false)))];
[deMorgan' : {a,b:bool}iff (is_false (andalso a b)) (is_false a \/ is_false b)
  = bool_double_elim ([a,b:bool]iff (is_false (andalso a b)) (is_false a \/ is_false b)) (pair%%((is_false (andalso true true))->(is_false true \/ is_false true))%%((is_false true \/ is_false true)->is_false (andalso true true)) ([H:is_false (andalso true true)]true_not_false H (is_false true \/ is_false true)) ([H:is_false true \/ is_false true]H%%(is_false (andalso true true)) ([H1:is_false true]true_not_false H1 (is_false (andalso true true))) ([H1:is_false true]true_not_false H1 (is_false (andalso true true))))) (pair%%((is_false (andalso true false))->(is_false true \/ is_false false))%%((is_false true \/ is_false false)->is_false (andalso true false)) ([H:is_false (andalso true false)]inr%%(is_false true)%%(is_false false) (Eq_refl%%bool false)) ([H:is_false true \/ is_false false]Eq_refl%%bool (andalso true false))) (pair%%((is_false (andalso false true))->(is_false false \/ is_false true))%%((is_false false \/ is_false true)->is_false (andalso false true)) ([H:is_false (andalso false true)]inl%%(is_false false)%%(is_false true) (Eq_refl%%bool false)) ([H:is_false false \/ is_false true]Eq_refl%%bool (andalso false true))) (pair%%((is_false (andalso false false))->(is_false false \/ is_false false))%%((is_false false \/ is_false false)->is_false (andalso false false)) ([H:is_false (andalso false false)]inr%%(is_false false)%%(is_false false) (Eq_refl%%bool false)) ([H:is_false false \/ is_false false]Eq_refl%%bool (andalso false false)))];
[implies_character : {a,b:bool}iff (is_true (implies a b)) ((is_true a)->is_true b)
  = [a,b:bool]pair%%((is_true (implies a b))->(is_true a)->is_true b)%%(((is_true a)->is_true b)->is_true (implies a b)) ([H:is_true (implies a b)][H1:is_true a]Eq_subst%%bool%%(implies a b)%%true H (Eq%%bool b) (Eq_subst%%bool%%true%%a (Eq_sym%%bool%%a%%true H1) ([z:bool]Eq%%bool b (implies z b)) (true_or_false b%%(Eq%%bool b (implies true b)) ([H2:is_true b]Eq_subst%%bool%%true%%b (Eq_sym%%bool%%b%%true H2) ([z:bool]Eq%%bool z (implies true z)) (Eq_refl%%bool true)) ([H2:is_false b]Eq_subst%%bool%%false%%b (Eq_sym%%bool%%b%%false H2) ([z:bool]Eq%%bool z (implies true z)) (Eq_refl%%bool false))))) ([H:(is_true a)->is_true b]true_or_false a%%(is_true (implies a b)) ([H1:is_true a]Eq_subst%%bool%%true%%b (Eq_sym%%bool%%b%%true (H H1)) ([z:bool]is_true (implies a z)) (Eq_refl%%bool (implies a true))) ([H1:is_false a]Eq_subst%%bool%%false%%a (Eq_sym%%bool%%a%%false H1) ([z:bool]is_true (implies z b)) (if_absorbs b%%bool true)))];
[implies_false : {n:bool}is_true (implies false n)
  = bool_ind ([n:bool]is_true (implies false n)) (Eq_refl%%bool (implies false true)) (Eq_refl%%bool (implies false false))];
